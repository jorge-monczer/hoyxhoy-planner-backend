{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/asignment/asignment.component.html","webpack:///./src/app/backlog/features.component.html","webpack:///./src/app/capacity/capacity.component.html","webpack:///./src/app/grid-custom-components/mat-checkbox-grid/mat-checkbox-grid.html","webpack:///./src/app/holidays/holidays.component.html","webpack:///./src/app/login/login.component.html","webpack:///./src/app/outlook/outlook.component.html","webpack:///./src/app/projects/projects.component.html","webpack:///./src/app/spending/spending.component.html","webpack:///./src/app/springs/springs.component.html","webpack:///./src/app/users/users.component.html","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/asignment/asignment.component.scss","webpack:///./src/app/asignment/asignment.component.ts","webpack:///./src/app/asignment/asignment.module.ts","webpack:///./src/app/asignment/asignment.service.ts","webpack:///./src/app/asignment/asignment.ts","webpack:///./src/app/backlog/feature.ts","webpack:///./src/app/backlog/features.component.scss","webpack:///./src/app/backlog/features.component.ts","webpack:///./src/app/backlog/features.module.ts","webpack:///./src/app/backlog/features.service.ts","webpack:///./src/app/capacity/capacity.component.scss","webpack:///./src/app/capacity/capacity.component.ts","webpack:///./src/app/capacity/capacity.module.ts","webpack:///./src/app/capacity/capacity.service.ts","webpack:///./src/app/capacity/capacity.ts","webpack:///./src/app/grid-custom-components/mat-checkbox-grid/mat-checkbox-grid.component.ts","webpack:///./src/app/grid-custom-components/mat-checkbox-grid/mat-checkbox-grid.module.ts","webpack:///./src/app/grid-custom-components/mat-edit-button-grid-render/mat-edit-button-grid-render.component.scss","webpack:///./src/app/grid-custom-components/mat-edit-button-grid-render/mat-edit-button-grid-render.component.ts","webpack:///./src/app/grid-custom-components/mat-edit-button-grid-render/mat-edit-button-grid-render.module.ts","webpack:///./src/app/grid-custom-components/mat-remove-button-grid-render/mat-remove-button-grid-render.component.scss","webpack:///./src/app/grid-custom-components/mat-remove-button-grid-render/mat-remove-button-grid-render.component.ts","webpack:///./src/app/grid-custom-components/mat-remove-button-grid-render/mat-remove-button-grid-render.module.ts","webpack:///./src/app/holidays/holiday.ts","webpack:///./src/app/holidays/holidays.component.scss","webpack:///./src/app/holidays/holidays.component.ts","webpack:///./src/app/holidays/holidays.module.ts","webpack:///./src/app/holidays/holidays.service.ts","webpack:///./src/app/login/login.component.scss","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/login/login.service.ts","webpack:///./src/app/outlook/outlook.component.scss","webpack:///./src/app/outlook/outlook.component.ts","webpack:///./src/app/outlook/outlook.module.ts","webpack:///./src/app/projects/project.ts","webpack:///./src/app/projects/projects.component.scss","webpack:///./src/app/projects/projects.component.ts","webpack:///./src/app/projects/projects.module.ts","webpack:///./src/app/projects/projects.service.ts","webpack:///./src/app/shared/ag-formatter.service.ts","webpack:///./src/app/shared/date.model.ts","webpack:///./src/app/shared/date.weekend.directive.ts","webpack:///./src/app/shared/decimal.directive.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/spending/spending.component.scss","webpack:///./src/app/spending/spending.component.ts","webpack:///./src/app/spending/spending.module.ts","webpack:///./src/app/spending/spending.service.ts","webpack:///./src/app/springs/spirng.ts","webpack:///./src/app/springs/springs.component.scss","webpack:///./src/app/springs/springs.component.ts","webpack:///./src/app/springs/springs.module.ts","webpack:///./src/app/springs/springs.service.ts","webpack:///./src/app/users/user.ts","webpack:///./src/app/users/users.component.scss","webpack:///./src/app/users/users.component.ts","webpack:///./src/app/users/users.module.ts","webpack:///./src/app/users/users.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div *ngIf=\\\"loginService.isUserLoggedIn\\\" style=\\\"padding: 20px;\\\" >\\n\\t<mat-toolbar #toolbar1 color=\\\"primary\\\">\\n\\t\\t<!--mat-icon>done</mat-icon-->\\n\\t\\t<span><img src=\\\"../assets/planner-logo.png\\\"/></span>\\n\\t\\t<!--span> v1</span-->\\n\\t\\t<span class=\\\"example-spacer\\\"></span>\\n\\t\\t<button mat-button [mat-menu-trigger-for]=\\\"menu\\\">\\n\\t\\t\\t<mat-icon>menu</mat-icon>\\n\\t\\t</button>\\n\\t\\t&nbsp;\\n\\t\\t<button mat-button (click)=\\\"logout()\\\">\\n\\t\\t\\t<mat-icon>exit_to_app</mat-icon>\\n\\t\\t</button>\\n\\t</mat-toolbar>\\n\\t\\t\\n\\t<mat-menu #menu=\\\"matMenu\\\">\\n\\t\\t<a routerLink=\\\"/projects\\\" routerLinkActive=\\\"active\\\" mat-menu-item>Projects</a>\\n\\t\\t<a routerLink=\\\"/users\\\" routerLinkActive=\\\"active\\\" mat-menu-item>Users</a>\\n\\t\\t<a routerLink=\\\"/backlog\\\" routerLinkActive=\\\"active\\\" mat-menu-item [disabled]=\\\"!loginService.currentProject\\\">Backlog</a>\\n\\t\\t<a routerLink=\\\"/springs\\\" routerLinkActive=\\\"active\\\" mat-menu-item [disabled]=\\\"!loginService.currentProject\\\">Springs</a>\\n\\t\\t<a routerLink=\\\"/asignment\\\" routerLinkActive=\\\"active\\\" mat-menu-item [disabled]=\\\"!loginService.currentProject\\\">Asignment</a>\\n\\t\\t<!--a routerLink=\\\"/springWizard\\\" routerLinkActive=\\\"active\\\" mat-menu-item [disabled]=\\\"!loginService.currentProject\\\">Springs Wizard</a-->\\n\\t\\t<a routerLink=\\\"/capacity\\\" routerLinkActive=\\\"active\\\" mat-menu-item [disabled]=\\\"!loginService.currentProject\\\">Capacity</a>\\n\\t\\t<a routerLink=\\\"/spending\\\" routerLinkActive=\\\"active\\\" mat-menu-item [disabled]=\\\"!loginService.currentProject\\\">Spending</a>\\n\\t\\t<a routerLink=\\\"/holidays\\\" routerLinkActive=\\\"active\\\" mat-menu-item>Holidays</a>\\n\\t\\t<a routerLink=\\\"/outlook\\\" routerLinkActive=\\\"active\\\" mat-menu-item [disabled]=\\\"!loginService.currentProject\\\">Outlook</a>\\n\\t</mat-menu>\\n\\n\\t<mat-toolbar style=\\\"display: flex;\\\">\\n\\t\\t<span >Welcome, {{loginService.currentName }}</span>\\n\\t\\t<span class=\\\"example-spacer\\\"></span>\\n\\t\\t<span >{{loginService.currentProjectName + \\\" \\\" + loginService.currentSpringName}}</span>\\n\\t</mat-toolbar>\\n</div>\\n<router-outlet></router-outlet>\\n\"","module.exports = \"<mat-card>\\n  <mat-card-header>\\n    <mat-card-title>Asignment Detail</mat-card-title>\\n  </mat-card-header>\\n  <form #myForm=\\\"ngForm\\\">\\n    <p *ngIf=\\\"errorMessage.length > 0\\\" class=\\\"text-danger\\\"> {{errorMessage}}</p>    \\n    <mat-form-field class=\\\"field-half-width\\\">\\n      <mat-select [(ngModel)]=\\\"asignment.feature\\\" name=\\\"featureSelected\\\" placeholder=\\\"Feature Selected\\\" [compareWith]=\\\"compareFeatures\\\" required>\\n        <mat-option *ngFor=\\\"let feat of features\\\" [value]=\\\"feat\\\">\\n            {{feat.code + \\\" \\\" + feat.title}}\\n        </mat-option>\\n      </mat-select>        \\n      <mat-error>This field is required</mat-error>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <mat-select [(ngModel)]=\\\"asignment.user\\\" name=\\\"userSelected\\\" placeholder=\\\"User Selected\\\" [compareWith]=\\\"compareUsers\\\" required>\\n        <mat-option *ngFor=\\\"let user of users\\\" [value]=\\\"user\\\">\\n            {{user.name}}\\n        </mat-option>\\n      </mat-select>        \\n      <mat-error>This field is required</mat-error>\\n    </mat-form-field>\\n    <button type=\\\"submit\\\" *ngIf=\\\"!isEditMode\\\" [disabled]=\\\"!myForm.valid\\\" mat-mini-fab color=\\\"primary\\\" (click)=\\\"addAsignment()\\\" matTooltip=\\\"Add {{getMatTooltipButton()}}\\\">\\n      <mat-icon>add</mat-icon>\\n    </button>  \\n    <button type=\\\"submit\\\" *ngIf=\\\"isEditMode\\\"  [disabled]=\\\"!myForm.valid\\\" mat-mini-fab color=\\\"primary\\\" (click)=\\\"updateAsignment()\\\" matTooltip=\\\"Confirm update {{getMatTooltipButton()}}\\\">\\n      <mat-icon>check</mat-icon>\\n    </button>  \\n    <button type=\\\"submit\\\" *ngIf=\\\"isEditMode\\\"  mat-mini-fab color=\\\"primary\\\" (click)=\\\"cancelEditMode()\\\" matTooltip=\\\"Cancel update {{getMatTooltipButton()}}\\\">\\n      <mat-icon>close</mat-icon>\\n    </button>\\n    </form>\\n</mat-card>\\n\\n<mat-card>\\n  <mat-card-header>\\n    <mat-card-title>Asignment List</mat-card-title>\\n  </mat-card-header>\\n  <ag-grid-angular \\n    #agGrid style=\\\"width: 100%; height: 200px;\\\" \\n    class=\\\"ag-theme-fresh\\\" \\n    [gridOptions]=\\\"gridOptions\\\" \\n    [columnDefs]=\\\"columnDefs\\\" \\n    [rowData]=\\\"rowData\\\" \\n    [context]=\\\"context\\\" \\n    (gridReady)=\\\"onGridReady($event)\\\">\\n  </ag-grid-angular>\\n</mat-card>\\n\"","module.exports = \"<mat-card>\\n  <mat-card-header>\\n    <mat-card-title>Backlog Detail</mat-card-title>\\n  </mat-card-header>\\n  <form #myForm=\\\"ngForm\\\">\\n    <p *ngIf=\\\"errorMessage.length > 0\\\" class=\\\"text-danger\\\"> {{errorMessage}}</p>    \\n    <mat-form-field>\\n        <input matInput [(ngModel)]=\\\"feature.code\\\" name=\\\"code\\\" placeholder=\\\"Code\\\" required>\\n        <mat-error>This field is required</mat-error>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input matInput [(ngModel)]=\\\"feature.title\\\" name=\\\"title\\\" placeholder=\\\"Title\\\" required>\\n      <mat-error>This field is required</mat-error>\\n    </mat-form-field>\\n    <!--span>{{feature.estimatedHours| number:'1.2-2'}}</span Show decimal format!-->\\n    <mat-form-field>\\n      <input matInput [ngModel]=\\\"feature.estimatedHours| number:'1.2-2'\\\"  (ngModelChange)=\\\"feature.estimatedHours=$event\\\" [ngModelOptions]=\\\"{updateOn: 'blur'}\\\" (change)=\\\"frm.setTwoNumberDecimal($event)\\\" name=\\\"estimatedHours\\\" placeholder=\\\"Estimated Hours\\\" type=\\\"number\\\" min=\\\"0.00\\\" max=\\\"999.99\\\"  required>\\n      <!--input matInput [(ngModel)]=\\\"feature.estimatedHours\\\" name=\\\"estimatedHours\\\" placeholder=\\\"Estimated Hours\\\" type=\\\"number\\\"  min=\\\"0.00\\\" maxlength=\\\"3\\\" required (keyup)=\\\"frm.validateNumberTwoDecimal($event)\\\" -->\\n      <mat-error>This field is required</mat-error>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input matInput [(ngModel)]=\\\"feature.committedDate\\\" name=\\\"committedDate\\\" placeholder=\\\"Committed Date\\\" type=\\\"date\\\" required #committedDate=\\\"ngModel\\\">\\n      <mat-error>This field is required</mat-error>\\n    </mat-form-field>\\n    <button type=\\\"submit\\\" *ngIf=\\\"!isEditMode\\\" [disabled]=\\\"!myForm.valid\\\" mat-mini-fab color=\\\"primary\\\" (click)=\\\"addFeature()\\\" matTooltip=\\\"Add {{feature.title}}\\\">\\n      <mat-icon>add</mat-icon>\\n    </button>  \\n    <button type=\\\"submit\\\" *ngIf=\\\"isEditMode\\\"  [disabled]=\\\"!myForm.valid\\\" mat-mini-fab color=\\\"primary\\\" (click)=\\\"updateFeature()\\\" matTooltip=\\\"Confirm update {{feature.title}}\\\">\\n      <mat-icon>check</mat-icon>\\n    </button>  \\n    <button type=\\\"submit\\\" *ngIf=\\\"isEditMode\\\"  mat-mini-fab color=\\\"primary\\\" (click)=\\\"cancelEditMode()\\\" matTooltip=\\\"Cancel update {{feature.title}}\\\">\\n      <mat-icon>close</mat-icon>\\n    </button>\\n    </form>\\n</mat-card>\\n\\n<mat-card>\\n  <mat-card-header>\\n    <mat-card-title>BackLog List</mat-card-title>\\n  </mat-card-header>\\n  <ag-grid-angular \\n    #agGrid style=\\\"width: 100%; height: 200px;\\\" \\n    class=\\\"ag-theme-fresh\\\" \\n    [gridOptions]=\\\"gridOptions\\\" \\n    [columnDefs]=\\\"columnDefs\\\" \\n    [rowData]=\\\"rowData\\\" \\n    [context]=\\\"context\\\" \\n    (gridReady)=\\\"onGridReady($event)\\\">\\n  </ag-grid-angular>\\n</mat-card>\\n\"","module.exports = \"<mat-card>\\n  <mat-card-header>\\n    <mat-card-title>Capacity Detail</mat-card-title>\\n  </mat-card-header>\\n  <form #myForm=\\\"ngForm\\\">\\n    <p *ngIf=\\\"errorMessage.length > 0\\\" class=\\\"text-danger\\\"> {{errorMessage}}</p>    \\n    <mat-form-field class=\\\"field-half-width\\\">\\n      <mat-select [(ngModel)]=\\\"capacity.user\\\" name=\\\"userSelected\\\" placeholder=\\\"User Selected\\\" [compareWith]=\\\"compareUsers\\\" required>\\n        <mat-option *ngFor=\\\"let user of users\\\" [value]=\\\"user\\\">\\n            {{user.name}}\\n        </mat-option>\\n      </mat-select>        \\n      <mat-error>This field is required</mat-error>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input matInput [ngModel]=\\\"capacity.availableHours| number:'1.2-2'\\\" (ngModelChange)=\\\"capacity.availableHours=$event\\\" [ngModelOptions]=\\\"{updateOn: 'blur'}\\\" (change)=\\\"frm.setTwoNumberDecimal($event)\\\" name=\\\"availableHours\\\" placeholder=\\\"Available Hours\\\" type=\\\"number\\\" min=\\\"0.00\\\" max=\\\"24.00\\\" required>\\n      <mat-error>This field is required</mat-error>\\n    </mat-form-field>\\n    <button type=\\\"submit\\\" *ngIf=\\\"!isEditMode\\\" [disabled]=\\\"!myForm.valid\\\" mat-mini-fab color=\\\"primary\\\" (click)=\\\"addCapacity()\\\" matTooltip=\\\"Add {{getMatTooltipButton()}}\\\">\\n      <mat-icon>add</mat-icon>\\n    </button>  \\n    <button type=\\\"submit\\\" *ngIf=\\\"isEditMode\\\"  [disabled]=\\\"!myForm.valid\\\" mat-mini-fab color=\\\"primary\\\" (click)=\\\"updateCapacity()\\\" matTooltip=\\\"Confirm update {{getMatTooltipButton()}}\\\">\\n      <mat-icon>check</mat-icon>\\n    </button>  \\n    <button type=\\\"submit\\\" *ngIf=\\\"isEditMode\\\"  mat-mini-fab color=\\\"primary\\\" (click)=\\\"cancelEditMode()\\\" matTooltip=\\\"Cancel update {{getMatTooltipButton()}}\\\">\\n      <mat-icon>close</mat-icon>\\n    </button>\\n    </form>\\n</mat-card>\\n\\n<mat-card>\\n  <mat-card-header>\\n    <mat-card-title>Capacity List</mat-card-title>\\n  </mat-card-header>\\n  <ag-grid-angular \\n    #agGrid style=\\\"width: 100%; height: 200px;\\\" \\n    class=\\\"ag-theme-fresh\\\" \\n    [gridOptions]=\\\"gridOptions\\\" \\n    [columnDefs]=\\\"columnDefs\\\" \\n    [rowData]=\\\"rowData\\\" \\n    [context]=\\\"context\\\" \\n    (gridReady)=\\\"onGridReady($event)\\\">\\n  </ag-grid-angular>\\n</mat-card>\\n\"","module.exports = \"<mat-checkbox \\r\\n    [ngModel]=\\\"checked\\\" \\r\\n    (ngModelChange)=\\\"onChange($event)\\\">\\r\\n</mat-checkbox>\"","module.exports = \"<mat-card>\\n  <mat-card-header>\\n    <mat-card-title>Holidays Detail</mat-card-title>\\n  </mat-card-header>\\n  <form #myForm=\\\"ngForm\\\">\\n    <p *ngIf=\\\"errorMessage.length > 0\\\" class=\\\"text-danger\\\"> {{errorMessage}}</p>    \\n    <mat-form-field>\\n        <input matInput [(ngModel)]=\\\"holiday.date\\\" name=\\\"date\\\" placeholder=\\\"Date\\\" type=\\\"date\\\" required #date=\\\"ngModel\\\" [disabled]=\\\"isEditMode\\\">\\n        <mat-error>This field is required</mat-error>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input matInput [(ngModel)]=\\\"holiday.description\\\" name=\\\"description\\\" placeholder=\\\"Description\\\" required>\\n      <mat-error>This field is required</mat-error>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input matInput [(ngModel)]=\\\"years\\\" name=\\\"years\\\" placeholder=\\\"Years\\\" type=\\\"number\\\" min=\\\"0\\\" max=\\\"99\\\">\\n      <mat-error>This field is required</mat-error>\\n    </mat-form-field>\\n    <button type=\\\"submit\\\" *ngIf=\\\"!isEditMode\\\" [disabled]=\\\"!myForm.valid\\\" mat-mini-fab color=\\\"primary\\\" (click)=\\\"addHoliday()\\\" matTooltip=\\\"Add {{holiday.description}}\\\">\\n      <mat-icon>add</mat-icon>\\n    </button>  \\n    <button type=\\\"submit\\\" *ngIf=\\\"isEditMode\\\"  [disabled]=\\\"!myForm.valid\\\" mat-mini-fab color=\\\"primary\\\" (click)=\\\"updateHoliday()\\\" matTooltip=\\\"Confirm update {{holiday.descriptiion}}\\\">\\n      <mat-icon>check</mat-icon>\\n    </button>  \\n    <button type=\\\"submit\\\" *ngIf=\\\"isEditMode\\\"  mat-mini-fab color=\\\"primary\\\" (click)=\\\"cancelEditMode()\\\" matTooltip=\\\"Cancel update {{holiday.description}}\\\">\\n      <mat-icon>close</mat-icon>\\n    </button>\\n    <button type=\\\"submit\\\" *ngIf=\\\"!isEditMode\\\"  [disabled]=\\\"!myForm.valid || !years\\\" mat-mini-fab color=\\\"primary\\\" (click)=\\\"addHolidaysForYears()\\\" matTooltip=\\\"Create Sequence\\\">\\n        <mat-icon>group_add</mat-icon>\\n      </button>  \\n    </form>\\n</mat-card>\\n\\n<mat-card>\\n  <mat-card-header>\\n    <mat-card-title>Holiday List</mat-card-title>\\n  </mat-card-header>\\n  <ag-grid-angular \\n    #agGrid style=\\\"width: 100%; height: 200px;\\\" \\n    class=\\\"ag-theme-fresh\\\" \\n    [gridOptions]=\\\"gridOptions\\\" \\n    [columnDefs]=\\\"columnDefs\\\" \\n    [rowData]=\\\"rowData\\\" \\n    [context]=\\\"context\\\" \\n    (gridReady)=\\\"onGridReady($event)\\\">\\n  </ag-grid-angular>\\n</mat-card>\\n\"","module.exports = \"<!--div class=\\\"modal-dialog\\\">\\r\\n  <div class=\\\"loginmodal-container\\\">\\r\\n    <h1>Login to Your Account</h1><br>\\r\\n    <button class=\\\"login loginmodal-submit\\\" (click)=\\\"login()\\\">Login With Google</button>\\r\\n  </div>\\r\\n</div-->\\r\\n<div class=\\\"login-content\\\">\\r\\n<mat-card>\\r\\n  <mat-card-title>\\r\\n    <mat-toolbar>\\r\\n      HOYxHOY Application\\r\\n    </mat-toolbar>\\r\\n  </mat-card-title>\\r\\n  <mat-card-subtitle>\\r\\n      Login to Your Account\\r\\n  </mat-card-subtitle>\\r\\n  <mat-card-content>\\r\\n    <form  class=\\\"login-form\\\" #myForm=\\\"ngForm\\\">\\r\\n      <p *ngIf=\\\"errorMessage.length > 0\\\" class=\\\"text-danger\\\"> {{errorMessage}}</p>    \\r\\n      <mat-form-field class=\\\"field-full-width\\\">\\r\\n          <input matInput [(ngModel)]=\\\"username\\\" name=\\\"username\\\" placeholder=\\\"user name\\\" required>\\r\\n          <mat-error>This field is required</mat-error>\\r\\n      </mat-form-field>\\r\\n      <mat-form-field class=\\\"field-full-width\\\">\\r\\n        <input matInput [(ngModel)]=\\\"password\\\" name=\\\"password\\\" type=\\\"password\\\" placeholder=\\\"password\\\" required>\\r\\n        <mat-error>This field is required</mat-error>\\r\\n      </mat-form-field>\\r\\n      <div class=\\\"field-full-width txt_center margin1em\\\">\\r\\n        <button color=\\\"primary\\\" mat-raised-button type=\\\"submit\\\" [disabled]=\\\"!myForm.valid\\\" (click)=\\\"login()\\\">\\r\\n            Login\\r\\n        </button>\\r\\n      </div>\\r\\n      <!-- users mrotger@plann.er 123456  larce@plann.er 123456  jm@gmail.com ??????-->\\r\\n   </form>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n</div>\\r\\n\"","module.exports = \"<p>\\n  outlook works!\\n</p>\\n\"","module.exports = \"<mat-card>\\n  <mat-card-header>\\n    <mat-card-title >Project Detail</mat-card-title>\\n  </mat-card-header>\\n  <form  #myForm=\\\"ngForm\\\">\\n    <p *ngIf=\\\"errorMessage.length > 0\\\" class=\\\"text-danger\\\"> {{errorMessage}}</p>    \\n    <mat-form-field>\\n        <input matInput [(ngModel)]=\\\"project.code\\\" name=\\\"code\\\" placeholder=\\\"Code\\\" required>\\n        <mat-error>This field is required</mat-error>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input matInput [(ngModel)]=\\\"project.name\\\" name=\\\"name\\\" type=\\\"text\\\" placeholder=\\\"Name\\\" required>\\n      <mat-error>This field is required</mat-error>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input matInput [(ngModel)]=\\\"project.startDate\\\" name=\\\"startDate\\\" placeholder=\\\"Start Date\\\" type=\\\"date\\\" required #startDate=\\\"ngModel\\\">\\n      <mat-error>This field is required</mat-error>\\n    </mat-form-field>\\n    <mat-form-field hintLabel=\\\"Ej. 10,15,20\\\">\\n      <input matInput [(ngModel)]=\\\"project.springDays\\\" name=\\\"springDays\\\" placeholder=\\\"Spring Days\\\" type=\\\"number\\\" min=\\\"0\\\" max=\\\"999\\\" required>\\n      <mat-error>This field is required</mat-error>\\n    </mat-form-field>\\n    <button type=\\\"submit\\\" *ngIf=\\\"!isEditMode\\\" [disabled]=\\\"!myForm.valid\\\" mat-mini-fab color=\\\"primary\\\" (click)=\\\"addProject()\\\" matTooltip=\\\"Add {{project.name}}\\\">\\n      <mat-icon>add</mat-icon>\\n    </button>  \\n    <button type=\\\"submit\\\" *ngIf=\\\"isEditMode\\\"  [disabled]=\\\"!myForm.valid\\\" mat-mini-fab color=\\\"primary\\\" (click)=\\\"updateProject()\\\" matTooltip=\\\"Confirm update {{project.name}}\\\">\\n      <mat-icon>check</mat-icon>\\n    </button>  \\n    <button type=\\\"submit\\\" *ngIf=\\\"isEditMode\\\"  mat-mini-fab color=\\\"primary\\\" (click)=\\\"cancelEditMode()\\\" matTooltip=\\\"Cancel update {{project.name}}\\\">\\n      <mat-icon>close</mat-icon>\\n    </button>\\n  </form>\\n</mat-card>\\n<mat-card>\\n  <mat-card-header>\\n    <mat-card-title>Project List</mat-card-title>\\n  </mat-card-header>\\n  <!--Selection: <span id=\\\"selectedRows\\\">{{ projectSelected | json }}</span-->\\n  <ag-grid-angular \\n    #agGrid style=\\\"width: 100%; height: 200px;\\\" \\n    id=\\\"myGrid\\\"\\n    class=\\\"ag-theme-fresh\\\" \\n    [gridOptions]=\\\"gridOptions\\\" \\n    [columnDefs]=\\\"columnDefs\\\" \\n    [rowData]=\\\"rowData\\\" \\n    [context]=\\\"context\\\" \\n    [rowSelection]=\\\"rowSelection\\\"\\n    (selectionChanged)=\\\"onSelectionChanged($event)\\\"\\n    (gridReady)=\\\"onGridReady($event)\\\">\\n  </ag-grid-angular>\\n</mat-card>\\n\"","module.exports = \"<mat-card>\\n  <mat-card-header>\\n    <mat-card-title>Spending List</mat-card-title>\\n  </mat-card-header>\\n  <form #myForm=\\\"ngForm\\\">\\n    <p class=\\\"text-danger\\\">{{errorMessage}}</p>    \\n    <ag-grid-angular \\n      #agGrid style=\\\"width: 100%; height: 200px;\\\" \\n      class=\\\"ag-theme-fresh\\\" \\n      [gridOptions]=\\\"gridOptions\\\" \\n      [columnDefs]=\\\"columnDefs\\\" \\n      [rowData]=\\\"rowData\\\" \\n      [context]=\\\"context\\\" \\n      (gridReady)=\\\"onGridReady($event)\\\"\\n      (cellEditingStarted)=\\\"onCellEditingStarted($event)\\\">\\n    </ag-grid-angular>\\n  <div class=\\\"field-full-width txt_center margin1em\\\">\\n      <button color=\\\"primary\\\" class=\\\"my_button\\\" mat-raised-button (click)=\\\"refeshAsignments()\\\">Cancel</button>\\n      <button color=\\\"primary\\\" class=\\\"my_button\\\" mat-raised-button (click)=\\\"saveSpendings()\\\">Save</button>\\n  </div>\\n  </form>\\n</mat-card>\\n\"","module.exports = \"<mat-card>\\n  <mat-card-header>\\n    <mat-card-title>Spring Detail</mat-card-title>\\n  </mat-card-header>\\n  <form #myForm=\\\"ngForm\\\">\\n    <p *ngIf=\\\"errorMessage.length > 0\\\" class=\\\"text-danger\\\"> {{errorMessage}}</p>    \\n    <mat-form-field>\\n        <input matInput [(ngModel)]=\\\"spring.code\\\" name=\\\"code\\\" placeholder=\\\"Spring Code\\\" required>\\n        <mat-error>This field is required</mat-error>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input matInput [(ngModel)]=\\\"spring.name\\\" name=\\\"name\\\" placeholder=\\\"Spring Name\\\" required>\\n      <mat-error>This field is required</mat-error>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input matInput [(ngModel)]=\\\"spring.springDays\\\" name=\\\"springDays\\\" placeholder=\\\"Spring Day\\\" type=\\\"number\\\" (change)=\\\"spring.setEndDateMdCalculed()\\\" required>\\n      <mat-error>This field is required</mat-error>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input matInput [(ngModel)]=\\\"spring.startDateMd.value\\\" name=\\\"startDate\\\" placeholder=\\\"Start Date\\\" type=\\\"date\\\" required disabled no-weekend #startDate=\\\"ngModel\\\" (change)=\\\"spring.setEndDateMdCalculed()\\\" >\\n      <mat-error *ngIf=\\\"startDate.errors && startDate.errors.required\\\">Email required</mat-error>\\n      <mat-error *ngIf=\\\"startDate.errors && startDate.errors.weekend && !startDate.errors.required \\\">Start Date on weekend</mat-error>\\n      <!--mat-error>This field is required</mat-error-->\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input matInput [(ngModel)]=\\\"spring.endDateMd.value\\\" name=\\\"endDate\\\" placeholder=\\\"End Date\\\" type=\\\"date\\\" required disabled>\\n      <mat-error>This field is required</mat-error>\\n    </mat-form-field>\\n    <button type=\\\"submit\\\" *ngIf=\\\"!isEditMode\\\" [disabled]=\\\"!myForm.valid\\\" mat-mini-fab color=\\\"primary\\\" (click)=\\\"addSpring()\\\" matTooltip=\\\"Add {{spring.name}}\\\">\\n      <mat-icon>add</mat-icon>\\n    </button>  \\n    <button type=\\\"submit\\\" *ngIf=\\\"isEditMode\\\"  [disabled]=\\\"!myForm.valid\\\" mat-mini-fab color=\\\"primary\\\" (click)=\\\"updateSpring()\\\" matTooltip=\\\"Confirm update {{spring.name}}\\\">\\n      <mat-icon>check</mat-icon>\\n    </button>  \\n    <button type=\\\"submit\\\" *ngIf=\\\"isEditMode\\\"  mat-mini-fab color=\\\"primary\\\" (click)=\\\"cancelEditMode()\\\" matTooltip=\\\"Cancel update {{spring.name}}\\\">\\n      <mat-icon>close</mat-icon>\\n    </button>\\n    </form>\\n</mat-card>\\n\\n<mat-card>\\n  <mat-card-header>\\n    <mat-card-title>Spring List</mat-card-title>\\n  </mat-card-header>\\n  <ag-grid-angular \\n    #agGrid style=\\\"width: 100%; height: 200px;\\\" \\n    class=\\\"ag-theme-fresh\\\" \\n    [gridOptions]=\\\"gridOptions\\\" \\n    [columnDefs]=\\\"columnDefs\\\" \\n    [rowData]=\\\"rowData\\\" \\n    [context]=\\\"context\\\" \\n    [rowSelection]=\\\"rowSelection\\\"\\n    (selectionChanged)=\\\"onSelectionChanged($event)\\\"\\n    (gridReady)=\\\"onGridReady($event)\\\">\\n  </ag-grid-angular>\\n</mat-card>\\n\"","module.exports = \"<mat-card>\\n  <mat-card-header>\\n    <mat-card-title>User Detail</mat-card-title>\\n  </mat-card-header>\\n  <form #myForm=\\\"ngForm\\\">\\n    <p *ngIf=\\\"errorMessage.length > 0\\\" class=\\\"text-danger\\\"> {{errorMessage}}</p>    \\n    <mat-form-field>\\n        <input matInput [(ngModel)]=\\\"user.username\\\" name=\\\"user\\\" placeholder=\\\"user\\\" required [disabled]=\\\"isEditMode\\\">\\n        <mat-error>This field is required</mat-error>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input matInput [(ngModel)]=\\\"user.name\\\" name=\\\"name\\\" placeholder=\\\"Name\\\" required>\\n      <mat-error>This field is required</mat-error>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input matInput [(ngModel)]=\\\"user.email\\\" name=\\\"email\\\" placeholder=\\\"Email\\\" type=\\\"email\\\" required email #email=\\\"ngModel\\\">\\n      <mat-error *ngIf=\\\"email.errors && email.errors.required\\\">Email required</mat-error>\\n      <mat-error *ngIf=\\\"email.errors && email.errors.email && !email.errors.required \\\">Email invalid format</mat-error>\\n    </mat-form-field>\\n    <mat-form-field hintLabel=\\\"Ej. +541112341234\\\">\\n      <input matInput [(ngModel)]=\\\"user.phone\\\" maxlength=\\\"13\\\" name=\\\"phone\\\" type=\\\"tel\\\" placeholder=\\\"Phone\\\" pattern=\\\"\\\\+[0-9]*\\\">\\n      <mat-error>Phone invalid format</mat-error>\\n    </mat-form-field>\\n    <mat-form-field hintLabel=\\\"Ej. +5491112341234\\\">\\n      <input matInput [(ngModel)]=\\\"user.mobile\\\" maxlength=\\\"14\\\" name=\\\"mobile\\\" type=\\\"tel\\\" placeholder=\\\"Mobile\\\" pattern=\\\"\\\\+[0-9]*\\\">\\n      <mat-error>Mobile invalid format</mat-error>\\n    </mat-form-field>\\n    <button type=\\\"submit\\\" *ngIf=\\\"!isEditMode\\\" [disabled]=\\\"!myForm.valid\\\" mat-mini-fab color=\\\"primary\\\" (click)=\\\"addUser()\\\" matTooltip=\\\"Add {{user.name}}\\\">\\n      <mat-icon>add</mat-icon>\\n    </button>  \\n    <button type=\\\"submit\\\" *ngIf=\\\"isEditMode\\\"  [disabled]=\\\"!myForm.valid\\\" mat-mini-fab color=\\\"primary\\\" (click)=\\\"updateUser()\\\" matTooltip=\\\"Confirm update {{user.name}}\\\">\\n      <mat-icon>check</mat-icon>\\n    </button>  \\n    <button type=\\\"submit\\\" *ngIf=\\\"isEditMode\\\"  mat-mini-fab color=\\\"primary\\\" (click)=\\\"cancelEditMode()\\\" matTooltip=\\\"Cancel update {{user.name}}\\\">\\n      <mat-icon>close</mat-icon>\\n    </button>\\n    <button type=\\\"submit\\\" *ngIf=\\\"isEditMode\\\"  [disabled]=\\\"!myForm.valid\\\" mat-mini-fab color=\\\"primary\\\" (click)=\\\"createUser()\\\" matTooltip=\\\"Create User {{user.name}}\\\">\\n        <mat-icon>group_add</mat-icon>\\n      </button>  \\n    </form>\\n</mat-card>\\n\\n<mat-card>\\n  <mat-card-header>\\n    <mat-card-title>User List</mat-card-title>\\n  </mat-card-header>\\n  <ag-grid-angular \\n    #agGrid style=\\\"width: 100%; height: 200px;\\\" \\n    class=\\\"ag-theme-fresh\\\" \\n    [gridOptions]=\\\"gridOptions\\\" \\n    [columnDefs]=\\\"columnDefs\\\" \\n    [rowData]=\\\"rowData\\\" \\n    [context]=\\\"context\\\" \\n    (gridReady)=\\\"onGridReady($event)\\\">\\n  </ag-grid-angular>\\n</mat-card>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProjectsComponent } from './projects/projects.component';\nimport { LoginComponent } from './login/login.component';\nimport { UsersComponent } from './users/users.component';\nimport { SpringsComponent } from './springs/springs.component';\nimport { FeaturesComponent } from './backlog/features.component';\nimport { AsignmentComponent } from './asignment/asignment.component';\nimport { CapacityComponent } from './capacity/capacity.component';\nimport { SpendingComponent } from './spending/spending.component';\nimport { HolidaysComponent } from './holidays/holidays.component';\nimport { OutlookComponent } from './outlook/outlook.component';\n \nconst routes: Routes = [\n  { path: '', redirectTo: 'projects', pathMatch: 'full' },\n  { path: 'projects', component: ProjectsComponent },\n  { path: 'springs', component: SpringsComponent },\n  { path: 'backlog', component: FeaturesComponent },\n  { path: 'asignment', component: AsignmentComponent },\n  { path: 'capacity', component: CapacityComponent },\n  { path: 'spending', component: SpendingComponent },\n  { path: 'holidays', component: HolidaysComponent },\n  { path: 'outlook', component: OutlookComponent },\n  { path: 'users', component: UsersComponent },\n  { path: 'login', component: LoginComponent }  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"#toolbar1 {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  z-index: 2;\\n}\\n\\n.example-spacer {\\n  flex: 1 1 auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvQzpcXGdtYWNcXHN0c193b3Jrc3BhY2VzXFxob3l4aG95LXBsYW5uZXJcXGhveXhob3ktcGxhbm5lci1mcm9udGVuZC9zcmNcXGFwcFxcYXBwLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFBO0VBQ0EsTUFBQTtFQUNBLE9BQUE7RUFDQSxVQUFBO0FDQ0Y7O0FERUE7RUFDRSxjQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjdG9vbGJhcjEge1xyXG4gIHBvc2l0aW9uOiBmaXhlZDtcclxuICB0b3A6IDA7XHJcbiAgbGVmdDogMDtcclxuICB6LWluZGV4OiAyO1xyXG59XHJcblxyXG4uZXhhbXBsZS1zcGFjZXIge1xyXG4gIGZsZXg6IDEgMSBhdXRvO1xyXG59XHJcbiIsIiN0b29sYmFyMSB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB6LWluZGV4OiAyO1xufVxuXG4uZXhhbXBsZS1zcGFjZXIge1xuICBmbGV4OiAxIDEgYXV0bztcbn0iXX0= */\"","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LoginService } from './login/login.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  public title = 'Angular 8 Application';\n  public isLoggedIn: boolean;\n  public img : any;\n\n  constructor(public loginService: LoginService, private router: Router) {\n    if(this.loginService.isUserLoggedIn) {\n      this.router.navigate(['']);\n    }\n    else {\n      this.router.navigate(['/login']);\n    } \n\n  }\n\n  logout() {\n    this.loginService.signOut();\n    this.router.navigate(['/login']);\n  }\n\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SharedModule } from './shared/shared.module';\nimport { ProjectsModule } from './projects/projects.module';\nimport { LoginComponent } from './login/login.component';\nimport { LoginService } from './login/login.service';\nimport { MatIconModule, MatMenuModule, MatToolbarModule, MatCardModule } from '@angular/material';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { UsersModule } from './users/users.module';\nimport { SpringsModule } from './springs/springs.module';\nimport { FeaturesModule } from './backlog/features.module';\nimport { AsignmentModule } from './asignment/asignment.module';\nimport { CapacityModule } from './capacity/capacity.module';\nimport { SpendingModule } from './spending/spending.module';\nimport { HolidaysModule } from './holidays/holidays.module';\nimport { OutlookModule } from './outlook/outlook.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent\n  ],\n  imports: [\n    SharedModule,\n    ProjectsModule,\n    UsersModule,\n    SpringsModule,\n    FeaturesModule,\n    CapacityModule,\n    AsignmentModule,\n    SpendingModule,\n    HolidaysModule,\n    OutlookModule,\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    MatIconModule,\n    MatMenuModule,\n    MatToolbarModule,\n    MatCardModule,\n    BrowserAnimationsModule,\n    HttpClientModule    \n  ],\n  providers: [\n    LoginService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FzaWdubWVudC9hc2lnbm1lbnQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\nimport { Subscription, Observable } from 'rxjs';\nimport { NgForm } from '@angular/forms';\nimport { GridApi, GridOptions } from 'ag-grid';\nimport { MatEditButtonGridRenderComponent } from '../grid-custom-components/mat-edit-button-grid-render/mat-edit-button-grid-render.component';\nimport { MatRemoveButtonGridRenderComponent } from '../grid-custom-components/mat-remove-button-grid-render/mat-remove-button-grid-render.component';\nimport { LoginService } from '../login/login.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { User } from '../users/user';\nimport { Feature } from '../backlog/feature';\nimport { FeaturesService } from '../backlog/features.service';\nimport { UserService } from '../users/users.service';\nimport { Asignment } from './asignment';\nimport { AsignmentService } from './asignment.service';\nimport { AgFormatterService } from '../shared/ag-formatter.service';\n\n@Component({\n  selector: 'app-asignment',\n  templateUrl: './asignment.component.html',\n  styleUrls: ['./asignment.component.scss']\n})\nexport class AsignmentComponent implements OnInit {\n\n  public asignment = new Asignment();\n  public context: any;\n  \n  @ViewChild('myForm', { static: false }) myForm: NgForm;\n  \n  private gridApi: GridApi;\n  private gridColumnApi;\n  private columnDefs: any;\n  private rowData: Asignment[];\n  private features : Feature[];\n  private users : User[];\n  private gridOptions: GridOptions;\n  private errorMessage : string = \"\";\n  private isEditMode: boolean = false;\n\n  constructor(private asignmentsService: AsignmentService, private featuresService :FeaturesService, private userService :UserService, private loginService: LoginService, private frm: AgFormatterService) {\n\n    this.context = { componentParent: this };\n\n    this.gridOptions = <GridOptions>{};\n    this.gridOptions.enableFilter = true;\n    this.gridOptions.enableSorting = true;\n    this.gridOptions.rowSelection = 'single';\n    this.gridOptions.suppressRowClickSelection = false;\n    this.gridOptions.enableColResize = true;\n    this.gridOptions.enableCellChangeFlash = true;\n    this.gridOptions.headerHeight = 45;\n\n    this.columnDefs = [\n      { headerName: 'Id', field: 'id', hide: true },\n      { headerName: 'F.Code', field: 'feature.code', filter: 'text', width: 100},\n      { headerName: 'Feature Title', field: 'feature.title', filter: 'text', width: 400 },\n      { headerName: 'Estimated Hs.', field: 'feature.estimatedHours', type: \"numericColumn\", filter: 'number', valueFormatter: this.frm.ag_numberTwoDecimalFormatter, width: 130 },\n      { headerName: 'Asigned', field: 'user.name', filter: 'text' , width: 150 },\n      { headerName: 'Asign </br>Remaining Hs.', field: 'remaining', type: \"numericColumn\", filter: 'number', valueFormatter: this.frm.ag_numberTwoDecimalFormatter, width: 130 },\n      { headerName: '', cellRendererFramework: MatEditButtonGridRenderComponent, width: 75 },\n      { headerName: '', suppressFilter: true, cellRendererFramework: MatRemoveButtonGridRenderComponent, width: 75 }\n    ];\n  }\n\n  ngOnInit(): void {\n    this.populateAsignments();\n    this.featuresService.getFeatures().toPromise().then( feats => this.features = feats);\n    this.userService.getUsers().toPromise().then(users => this.users = users);\n}\n\n  refeshAsignments(): void {\n    this.populateAsignments();\n    this.initialMode();\n  }\n\n  private populateAsignments() {\n    this.asignments.subscribe(\n      asignmentList => this.rowData = asignmentList, \n      error => this.handleError(error)\n    );\n  }\n\n  dateFormatter(params: any) {\n    return new Date(params.value).toLocaleDateString(\"es-ES\",{timeZone: 'UTC', year:\"numeric\",month:\"2-digit\", day:\"2-digit\"});\n  }\n\n  get asignments(): Observable<Asignment[]> {\n    return this.asignmentsService.getAsignments();\n  }\n  \n  getAsignmentById(id: number): Observable<Asignment> {\n    return this.asignmentsService.getAsignmentById(id);\n  }\n\n  removeAsignment(id: number) {\n    this.asignmentsService.deleteAsignmentById(id).subscribe(\n      data => this.refeshAsignments(),\n      error => console.log(error)\n    );\n  }\n\n  editAsignment(data: Asignment) {\n    this.asignment = new Asignment(data);\n    this.errorMessage = \"\";\n  }\n  \n  addAsignment(): void {\n  //  this.project.status = \"OPEN\";\n    this.asignmentsService.addAsignment(this.asignment).subscribe(\n      data => this.refeshAsignments(),\n      error => this.handleError(error)\n    );\n  }\n\n  handleError(res: HttpErrorResponse) {\n      this.errorMessage = res.error.error_message;\n      console.log(res);\n  }\n\n  updateAsignment(){\n    this.asignmentsService.updateAsignment(this.asignment).subscribe(\n      data => this.refeshAsignments(),\n      error => this.handleError(error)\n    );\n  }\n\n  resetControls() {\n    this.myForm.resetForm();\n    Object.keys(this.myForm.controls).forEach(field => {      \n      const control = this.myForm.control.get(field);         \n      control.markAsUntouched();\n    });\n  }\n\n  // Call from MatRemoveButtonGridRenderComponent\n  removeFromComponent(asignment: Asignment){\n    this.removeAsignment(asignment.id);\n    this.initialMode();\n  }\n\n  // Call from MatEditButtonGridRenderComponent\n  editFromComponent(data: Asignment){\n    this.isEditMode = true;\n    this.editAsignment(data);\n  }\n\n  cancelEditMode() {\n    this.initialMode();\n  }  \n\n  private initialMode() {\n    this.asignment = new Asignment();\n    this.errorMessage = \"\";\n    this.isEditMode = false;\n    this.resetControls();\n  }\n\n  onGridReady(params: any) {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    this.gridColumnApi.autoSizeColumns();\n  }\n\n  compareFeatures(o1:Feature,o2:Feature) : boolean {\n    return (o1 && o2) ? o1.id === o2.id : o1 === o2; \n  }\n\n  compareUsers(o1:User,o2:User) : boolean {\n    return (o1 && o2) ? o1.username === o2.username : o1 === o2;       \n  }\n\n  getMatTooltipButton() : string {\n    if (this.asignment.feature) {\n      return this.asignment.feature.title;\n    }\n    return \"\";\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { AgGridModule } from 'ag-grid-angular';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { environment } from '../../environments/environment';\nimport { AsignmentComponent } from './asignment.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    AgGridModule.withComponents([])\n  ],\n  declarations: [AsignmentComponent]\n})\nexport class AsignmentModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { LoginService } from '../login/login.service';\nimport { Asignment } from './asignment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AsignmentService {\n  private _baseUrl = './api/springs/';\n\n  constructor(private http: HttpClient, private loginService: LoginService) {\n  }\n\n  getAsignments() : Observable<Asignment[]>{\n    return this.http.get(this.baseUrl) as Observable<Asignment[]>;\n  }\n\n  getAsignmentById(id : number): Observable<Asignment> {\n    return this.http.get(`${this.baseUrl}/${id}`) as Observable<Asignment>;\n  }\n\n  addAsignment(asignment: Asignment): Observable<Asignment>  {\n      return this.http.post(this.baseUrl, asignment)  as Observable<Asignment>;\n  }\n\n  deleteAsignmentById(id: number) : Observable<Asignment> {\n    return this.http.delete(`${this.baseUrl}/${id}`)  as Observable<Asignment>;\n  }\n\n  updateAsignment(asignment : Asignment): Observable<Asignment> {\n    return this.http.put(`${this.baseUrl}/${asignment.id}`, asignment) as Observable<Asignment>;\n  }\n\n  private get baseUrl(): string {\n    return this._baseUrl + this.loginService.currentSpringId + '/asignments';\n  }\n\n}\n","import { User } from '../users/user';\r\nimport { Feature } from '../backlog/feature';\r\n\r\nexport class Asignment {\r\n    \r\n    public id : number;\r\n    public feature : Feature;\r\n    public user : User;\r\n    public spendingsInt : number[] = [];\r\n    public spending: number;\r\n\r\n    constructor(values: Object = {}) {\r\n        Object.assign(this, values);\r\n        this.calculateSumSpending();\r\n    }\r\n\r\n    addSpendings(length: number) : Asignment  {\r\n        for (let index = 0; index < length; index++) {\r\n            this.spendingsInt[index] = null;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    calculateSumSpending() {\r\n        let numOr0 = (n: number) => isNaN(n) ? 0 : n;\r\n        this.spending = this.spendingsInt.reduce((a,b) => numOr0(a) + numOr0(b),0);\r\n    }\r\n\r\n}\r\n","export class Feature {\r\n    \r\n    id : number;\r\n    code : string;\r\n    title : string = '';\r\n    status : string = '';\r\n    estimatedHours : number = 0;\r\n    committedDate: Date = null;\r\n\r\n    constructor(values: Object = {}) {\r\n        Object.assign(this, values);\r\n    }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JhY2tsb2cvZmVhdHVyZXMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\nimport { Subscription, Observable } from 'rxjs';\nimport { NgForm } from '@angular/forms';\nimport { GridApi, GridOptions } from 'ag-grid';\nimport { MatEditButtonGridRenderComponent } from '../grid-custom-components/mat-edit-button-grid-render/mat-edit-button-grid-render.component';\nimport { MatRemoveButtonGridRenderComponent } from '../grid-custom-components/mat-remove-button-grid-render/mat-remove-button-grid-render.component';\nimport { LoginService } from '../login/login.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Feature } from './feature';\nimport { FeaturesService } from './features.service';\nimport { AgFormatterService } from '../shared/ag-formatter.service';\n\n@Component({\n  selector: 'app-features',\n  templateUrl: './features.component.html',\n  styleUrls: ['./features.component.scss']\n})\nexport class FeaturesComponent implements OnInit {\n\n  public feature = new Feature();\n  public context: any;\n  \n  @ViewChild('myForm', { static: false }) myForm: NgForm;\n  \n  private gridApi: GridApi;\n  private gridColumnApi;\n  private columnDefs: any;\n  private rowData: Feature[];\n  private gridOptions: GridOptions;\n  private errorMessage : string = \"\";\n  private isEditMode: boolean = false;\n\n  constructor(private featuresService: FeaturesService, private loginService: LoginService, private frm: AgFormatterService) {\n\n    this.context = { componentParent: this };\n\n    this.gridOptions = <GridOptions>{};\n    this.gridOptions.enableFilter = true;\n    this.gridOptions.enableSorting = true;\n    this.gridOptions.rowSelection = 'single';\n    this.gridOptions.suppressRowClickSelection = false;\n    this.gridOptions.enableColResize = true;\n    this.gridOptions.enableCellChangeFlash = true;\n\n    this.columnDefs = [\n      { headerName: 'Id', field: 'id', hide: true },\n      { headerName: 'F.Code', field: 'code', filter: 'text' , width: 100 },\n      { headerName: 'Feature Title', field: 'title', filter: 'text', width: 400 },\n      { headerName: 'Estimated Hours', field: 'estimatedHours', type: \"numericColumn\", filter: 'number' , valueFormatter: this.frm.ag_numberTwoDecimalFormatter, width: 130 },\n      { headerName: 'Committed Date', field: 'committedDate', filter: 'text', valueFormatter: this.frm.ag_dateFormatter , width: 170 },\n      { headerName: '', cellRendererFramework: MatEditButtonGridRenderComponent, width: 75 },\n      { headerName: '', suppressFilter: true, cellRendererFramework: MatRemoveButtonGridRenderComponent, width: 75 }\n    ];\n  }\n\n  ngOnInit(): void {\n    this.populateFeatures();\n  }\n\n  refeshFeatures(): void {\n    this.populateFeatures();\n    this.initialMode();\n  }\n\n  private populateFeatures() {\n    this.features.subscribe(\n      featureList => this.rowData = featureList, \n      error => this.handleError(error)\n    );\n  }\n\n  dateFormatter(params: any) {\n    return new Date(params.value).toLocaleDateString(\"en-US\",{timeZone: 'UTC', year:\"numeric\",month:\"2-digit\", day:\"2-digit\"});\n  }\n\n  numberFormatter(params: any) {\n    return params.value.toLocaleString(undefined, {minimumFractionDigits: 2, maximumFractionDigits: 2})\n  }\n\n  get features(): Observable<Feature[]> {\n    return this.featuresService.getFeatures();\n  }\n  \n  getFeatureById(id: number): Observable<Feature> {\n    return this.featuresService.getFeatureById(id);\n  }\n\n  removeFeature(id: number) {\n    this.featuresService.deleteFeatureById(id).subscribe(\n      data => this.refeshFeatures(),\n      error => console.log(error)\n    );\n  }\n\n  editFeature(data: Feature) {\n    this.feature = new Feature(data);\n    this.errorMessage = \"\";\n  }\n  \n  addFeature(): void {\n  //  this.project.status = \"OPEN\";\n    this.featuresService.addFeature(this.feature).subscribe(\n      data => this.refeshFeatures(),\n      error => this.handleError(error)\n    );\n  }\n\n  handleError(res: HttpErrorResponse) {\n      this.errorMessage = res.error.error_message; \n      console.log(res);\n  }\n\n  updateFeature(){\n    this.featuresService.updateFeature(this.feature).subscribe(\n      data => this.refeshFeatures(),\n      error => this.handleError(error)\n    );\n  }\n\n  resetControls() {\n    this.myForm.resetForm();\n    Object.keys(this.myForm.controls).forEach(field => {      \n      const control = this.myForm.control.get(field);         \n      control.markAsUntouched();\n    });\n  }\n\n  // Call from MatRemoveButtonGridRenderComponent\n  removeFromComponent(feature: Feature){\n    this.removeFeature(feature.id);\n    this.initialMode();\n  }\n\n  // Call from MatEditButtonGridRenderComponent\n  editFromComponent(data: Feature){\n    this.isEditMode = true;\n    this.editFeature(data);\n  }\n\n  cancelEditMode() {\n    this.initialMode();\n  }  \n\n  private initialMode() {\n    this.feature = new Feature();\n    this.errorMessage = \"\";\n    this.isEditMode = false;\n    this.resetControls();\n  }\n\n  onGridReady(params: any) {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    this.gridColumnApi.autoSizeColumns();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { AgGridModule } from 'ag-grid-angular';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { environment } from '../../environments/environment';\nimport { FeaturesComponent } from './features.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    AgGridModule.withComponents([])\n  ],\n  declarations: [FeaturesComponent]\n})\nexport class FeaturesModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { Feature } from './feature';\nimport { LoginService } from '../login/login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FeaturesService {\n  private currentProjectId = \"\";\n  private _baseUrl = './api/projects/';\n\n  constructor(private http: HttpClient, private loginService: LoginService) {\n  }\n\n  getFeatures() : Observable<Feature[]>{\n    return this.http.get(this.baseUrl) as Observable<Feature[]>;\n  }\n\n  getFeatureById(id : number): Observable<Feature> {\n    return this.http.get(`${this.baseUrl}/${id}`) as Observable<Feature>;\n  }\n\n  addFeature(feature: Feature): Observable<Feature>  {\n      return this.http.post(this.baseUrl, feature)  as Observable<Feature>;\n  }\n\n  deleteFeatureById(id: number) : Observable<Feature> {\n    return this.http.delete(`${this.baseUrl}/${id}`)  as Observable<Feature>;\n  }\n\n  updateFeature(feature : Feature): Observable<Feature> {\n    return this.http.put(`${this.baseUrl}/${feature.id}`, feature) as Observable<Feature>;\n  }\n\n  private get baseUrl(): string {\n    return this._baseUrl + this.loginService.currentProjectId + '/features';\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhcGFjaXR5L2NhcGFjaXR5LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\nimport { Subscription, Observable } from 'rxjs';\nimport { NgForm } from '@angular/forms';\nimport { GridApi, GridOptions } from 'ag-grid';\nimport { MatEditButtonGridRenderComponent } from '../grid-custom-components/mat-edit-button-grid-render/mat-edit-button-grid-render.component';\nimport { MatRemoveButtonGridRenderComponent } from '../grid-custom-components/mat-remove-button-grid-render/mat-remove-button-grid-render.component';\nimport { LoginService } from '../login/login.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { User } from '../users/user';\nimport { UserService } from '../users/users.service';\nimport { Capacity } from './capacity';\nimport { CapacityService } from './capacity.service';\nimport { AgFormatterService } from '../shared/ag-formatter.service';\n\n@Component({\n  selector: 'app-capacity',\n  templateUrl: './capacity.component.html',\n  styleUrls: ['./capacity.component.scss']\n})\nexport class CapacityComponent implements OnInit {\n\n  public capacity = new Capacity();\n  public context: any;\n  \n  @ViewChild('myForm', { static: false }) myForm: NgForm;\n  \n  private gridApi: GridApi;\n  private gridColumnApi;\n  private columnDefs: any;\n  private rowData: Capacity[];\n  private users : User[];\n  private gridOptions: GridOptions;\n  private errorMessage : string = \"\";\n  private isEditMode: boolean = false;\n\n  constructor(private capacitysService: CapacityService, private userService :UserService, private loginService: LoginService, private frm: AgFormatterService) {\n\n    this.context = { componentParent: this };\n\n    this.gridOptions = <GridOptions>{};\n    this.gridOptions.enableFilter = true;\n    this.gridOptions.enableSorting = true;\n    this.gridOptions.rowSelection = 'single';\n    this.gridOptions.suppressRowClickSelection = false;\n    this.gridOptions.enableColResize = true;\n    this.gridOptions.enableCellChangeFlash = true;\n\n    this.columnDefs = [\n      { headerName: 'Id', field: 'id', hide: true },\n      { headerName: 'User', field: 'user.name', filter: 'text' , width: 150 },\n      { headerName: 'Available Hs', field: 'availableHours', type: \"numericColumn\", filter: 'number', valueFormatter: this.frm.ag_numberTwoDecimalFormatter, width: 130 },\n      { headerName: 'Total Hs', field: 'availableOnSpring', type: \"numericColumn\", filter: 'number', valueFormatter: this.frm.ag_numberTwoDecimalFormatter, width: 130 },\n      { headerName: 'Remaining Hs', field: 'remainingOnSpring', type: \"numericColumn\", filter: 'number', valueFormatter: this.frm.ag_numberTwoDecimalFormatter, width: 130 },\n      { headerName: '', cellRendererFramework: MatEditButtonGridRenderComponent, width: 75 },\n      { headerName: '', suppressFilter: true, cellRendererFramework: MatRemoveButtonGridRenderComponent, width: 75 }\n    ];\n  }\n\n  ngOnInit(): void {\n    this.populateCapacitys();\n    this.userService.getUsers().toPromise().then(users => this.users = users);\n}\n\n  refeshCapacitys(): void {\n    this.populateCapacitys();\n    this.initialMode();\n  }\n\n  private populateCapacitys() {\n    this.capacities.subscribe(\n      capacityList => this.rowData = capacityList, \n      error => this.handleError(error)\n    );\n  }\n\n  dateFormatter(params: any) {\n    return new Date(params.value).toLocaleDateString(\"es-ES\",{timeZone: 'UTC', year:\"numeric\",month:\"2-digit\", day:\"2-digit\"});\n  }\n\n  get capacities(): Observable<Capacity[]> {\n    return this.capacitysService.getCapacities();\n  }\n  \n  getCapacityById(id: number): Observable<Capacity> {\n    return this.capacitysService.getCapacityById(id);\n  }\n\n  removeCapacity(id: number) {\n    this.capacitysService.deleteCapacityById(id).subscribe(\n      data => this.refeshCapacitys(),\n      error => console.log(error)\n    );\n  }\n\n  editCapacity(data: Capacity) {\n    this.capacity = new Capacity(data);\n    this.errorMessage = \"\";\n  }\n  \n  addCapacity(): void {\n  //  this.project.status = \"OPEN\";\n    this.capacitysService.addCapacity(this.capacity).subscribe(\n      data => this.refeshCapacitys(),\n      error => this.handleError(error)\n    );\n  }\n\n  handleError(res: HttpErrorResponse) {\n    this.errorMessage = res.error.error_message; \n    console.log(res);\n  }\n\n  updateCapacity(){\n    this.capacitysService.updateCapacity(this.capacity).subscribe(\n      data => this.refeshCapacitys(),\n      error => this.handleError(error)\n    );\n  }\n\n  resetControls() {\n    this.myForm.resetForm();\n    Object.keys(this.myForm.controls).forEach(field => {      \n      const control = this.myForm.control.get(field);         \n      control.markAsUntouched();\n    });\n  }\n\n  // Call from MatRemoveButtonGridRenderComponent\n  removeFromComponent(capacity: Capacity){\n    this.removeCapacity(capacity.id);\n    this.initialMode();\n  }\n\n  // Call from MatEditButtonGridRenderComponent\n  editFromComponent(data: Capacity){\n    this.isEditMode = true;\n    this.editCapacity(data);\n  }\n\n  cancelEditMode() {\n    this.initialMode();\n  }  \n\n  private initialMode() {\n    this.capacity = new Capacity();\n    this.errorMessage = \"\";\n    this.isEditMode = false;\n    this.resetControls();\n  }\n\n  onGridReady(params: any) {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    this.gridColumnApi.autoSizeColumns();\n  }\n\n  compareUsers(o1:User,o2:User) : boolean {\n    return (o1 && o2) ? o1.username === o2.username : o1 === o2;       \n  }\n\n  getMatTooltipButton() : string {\n    if (this.capacity.user) {\n      return this.capacity.user.username;\n    }\n    return \"\";\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { AgGridModule } from 'ag-grid-angular';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { environment } from '../../environments/environment';\nimport { CapacityComponent } from './capacity.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    AgGridModule.withComponents([])\n  ],\n  declarations: [CapacityComponent]\n})\nexport class CapacityModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { LoginService } from '../login/login.service';\nimport { Capacity } from './capacity';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CapacityService {\n  private _baseUrl = './api/springs/';\n\n  constructor(private http: HttpClient, private loginService: LoginService) {\n  }\n\n  getCapacities() : Observable<Capacity[]>{\n    return this.http.get(this.baseUrl) as Observable<Capacity[]>;\n  }\n\n  getCapacityById(id : number): Observable<Capacity> {\n    return this.http.get(`${this.baseUrl}/${id}`) as Observable<Capacity>;\n  }\n\n  addCapacity(capacity: Capacity): Observable<Capacity>  {\n      return this.http.post(this.baseUrl, capacity)  as Observable<Capacity>;\n  }\n\n  deleteCapacityById(id: number) : Observable<Capacity> {\n    return this.http.delete(`${this.baseUrl}/${id}`)  as Observable<Capacity>;\n  }\n\n  updateCapacity(capacity : Capacity): Observable<Capacity> {\n    return this.http.put(`${this.baseUrl}/${capacity.id}`, capacity) as Observable<Capacity>;\n  }\n\n  private get baseUrl(): string {\n    return this._baseUrl + this.loginService.currentSpringId + '/capacities';\n  }\n\n}\n","import { User } from '../users/user';\r\nimport { Spring } from '../springs/spirng';\r\n\r\nexport class Capacity {\r\n    \r\n    id : number;\r\n    spring : Spring;\r\n    user : User;\r\n    availableHours : number\r\n\r\n    constructor(values: Object = {}) {\r\n        Object.assign(this, values);\r\n    }\r\n\r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { ICellRendererAngularComp } from \"ag-grid-angular\";\r\nimport { IAfterGuiAttachedParams, ICellRendererParams } from \"ag-grid\";\r\n\r\n@Component({\r\n    selector: 'checkbox-cell',\r\n    templateUrl: './mat-checkbox-grid.html'\r\n})\r\nexport class MatCheckboxGridComponent implements ICellRendererAngularComp {\r\n    \r\n    private params: any;\r\n    public checked: boolean = false;\r\n\r\n    agInit(params: ICellRendererParams): void {\r\n        this.params = params;\r\n        this.checked = this.params.value;\r\n    }\r\n\r\n    refresh(params: any): boolean {\r\n        return false;\r\n    }\r\n\r\n    afterGuiAttached?(params?: IAfterGuiAttachedParams): void {\r\n        \r\n    }\r\n\r\n    onChange(checked: boolean) {\r\n        this.checked = checked;\r\n        this.params.node.setDataValue(this.params.colDef, this.checked);\r\n\r\n        let key = this.params.data.key;\r\n        this.params.context.componentParent.updateFromComponent(key, checked);\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatCheckboxGridComponent } from './mat-checkbox-grid.component';\r\nimport { MatCheckboxModule } from '@angular/material';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatCheckboxModule,\r\n    FormsModule\r\n  ],\r\n  entryComponents: [MatCheckboxGridComponent],\r\n  declarations: [MatCheckboxGridComponent]\r\n})\r\nexport class MatCheckboxGridModule { }\r\n","module.exports = \".mat-mini-fab {\\n  height: 22px;\\n  width: 22px;\\n  border-radius: 80%;\\n  line-height: 22px;\\n}\\n.mat-mini-fab::ng-deep .mat-button-wrapper {\\n  padding: 0 !important;\\n  line-height: 22px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZ3JpZC1jdXN0b20tY29tcG9uZW50cy9tYXQtZWRpdC1idXR0b24tZ3JpZC1yZW5kZXIvQzpcXGdtYWNcXHN0c193b3Jrc3BhY2VzXFxob3l4aG95LXBsYW5uZXJcXGhveXhob3ktcGxhbm5lci1mcm9udGVuZC9zcmNcXGFwcFxcZ3JpZC1jdXN0b20tY29tcG9uZW50c1xcbWF0LWVkaXQtYnV0dG9uLWdyaWQtcmVuZGVyXFxtYXQtZWRpdC1idXR0b24tZ3JpZC1yZW5kZXIuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2dyaWQtY3VzdG9tLWNvbXBvbmVudHMvbWF0LWVkaXQtYnV0dG9uLWdyaWQtcmVuZGVyL21hdC1lZGl0LWJ1dHRvbi1ncmlkLXJlbmRlci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFlBQUE7RUFDQSxXQUFBO0VBQ0Esa0JBQUE7RUFDQSxpQkFBQTtBQ0NKO0FEQUk7RUFDSSxxQkFBQTtFQUNBLGlCQUFBO0FDRVIiLCJmaWxlIjoic3JjL2FwcC9ncmlkLWN1c3RvbS1jb21wb25lbnRzL21hdC1lZGl0LWJ1dHRvbi1ncmlkLXJlbmRlci9tYXQtZWRpdC1idXR0b24tZ3JpZC1yZW5kZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LW1pbmktZmFiIHtcclxuICAgIGhlaWdodDogMjJweDtcclxuICAgIHdpZHRoOiAyMnB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogODAlO1xyXG4gICAgbGluZS1oZWlnaHQ6IDIycHg7XHJcbiAgICAmOjpuZy1kZWVwIC5tYXQtYnV0dG9uLXdyYXBwZXIge1xyXG4gICAgICAgIHBhZGRpbmc6IDAgIWltcG9ydGFudDtcclxuICAgICAgICBsaW5lLWhlaWdodDogMjJweDtcclxuICAgIH0gICAgXHJcbn1cclxuIiwiLm1hdC1taW5pLWZhYiB7XG4gIGhlaWdodDogMjJweDtcbiAgd2lkdGg6IDIycHg7XG4gIGJvcmRlci1yYWRpdXM6IDgwJTtcbiAgbGluZS1oZWlnaHQ6IDIycHg7XG59XG4ubWF0LW1pbmktZmFiOjpuZy1kZWVwIC5tYXQtYnV0dG9uLXdyYXBwZXIge1xuICBwYWRkaW5nOiAwICFpbXBvcnRhbnQ7XG4gIGxpbmUtaGVpZ2h0OiAyMnB4O1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\r\nimport { ICellRendererParams } from 'ag-grid';\r\nimport { RowNode } from 'ag-grid/dist/lib/entities/rowNode';\r\n\r\n@Component({\r\n  selector: 'app-mat-edit-button-grid-render',\r\n  template: `<button mat-mini-fab color=\"primary\" (click)=\"edit()\">\r\n              <mat-icon  inline=\"true\">mode_edit</mat-icon>\r\n            </button>`,\r\n  styleUrls: ['./mat-edit-button-grid-render.component.scss']\r\n})\r\nexport class MatEditButtonGridRenderComponent implements ICellRendererAngularComp {\r\n\r\n  public params: ICellRendererParams;\r\n\r\n  agInit(params: ICellRendererParams): void {\r\n      this.params = params;\r\n  }\r\n\r\n  public edit() {\r\n      let data = this.params.data;\r\n      this.params.context.componentParent.editFromComponent(data);\r\n  }\r\n\r\n  refresh(): boolean {\r\n      return false;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatEditButtonGridRenderComponent } from './mat-edit-button-grid-render.component';\r\nimport { MatButtonModule, MatIconModule } from '@angular/material';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    MatButtonModule,\r\n    MatIconModule\r\n  ],\r\n  entryComponents: [MatEditButtonGridRenderComponent],\r\n  declarations: [ MatEditButtonGridRenderComponent ]\r\n})\r\nexport class MatEditButtonGridRenderModule { }\r\n","module.exports = \".mat-mini-fab {\\n  height: 22px;\\n  width: 22px;\\n  border-radius: 80%;\\n  line-height: 22px;\\n}\\n.mat-mini-fab::ng-deep .mat-button-wrapper {\\n  padding: 0 !important;\\n  line-height: 22px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZ3JpZC1jdXN0b20tY29tcG9uZW50cy9tYXQtcmVtb3ZlLWJ1dHRvbi1ncmlkLXJlbmRlci9DOlxcZ21hY1xcc3RzX3dvcmtzcGFjZXNcXGhveXhob3ktcGxhbm5lclxcaG95eGhveS1wbGFubmVyLWZyb250ZW5kL3NyY1xcYXBwXFxncmlkLWN1c3RvbS1jb21wb25lbnRzXFxtYXQtcmVtb3ZlLWJ1dHRvbi1ncmlkLXJlbmRlclxcbWF0LXJlbW92ZS1idXR0b24tZ3JpZC1yZW5kZXIuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2dyaWQtY3VzdG9tLWNvbXBvbmVudHMvbWF0LXJlbW92ZS1idXR0b24tZ3JpZC1yZW5kZXIvbWF0LXJlbW92ZS1idXR0b24tZ3JpZC1yZW5kZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxZQUFBO0VBQ0EsV0FBQTtFQUNBLGtCQUFBO0VBQ0EsaUJBQUE7QUNDSjtBREFJO0VBQ0kscUJBQUE7RUFDQSxpQkFBQTtBQ0VSIiwiZmlsZSI6InNyYy9hcHAvZ3JpZC1jdXN0b20tY29tcG9uZW50cy9tYXQtcmVtb3ZlLWJ1dHRvbi1ncmlkLXJlbmRlci9tYXQtcmVtb3ZlLWJ1dHRvbi1ncmlkLXJlbmRlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtbWluaS1mYWIge1xyXG4gICAgaGVpZ2h0OiAyMnB4O1xyXG4gICAgd2lkdGg6IDIycHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiA4MCU7XHJcbiAgICBsaW5lLWhlaWdodDogMjJweDtcclxuICAgICY6Om5nLWRlZXAgLm1hdC1idXR0b24td3JhcHBlciB7XHJcbiAgICAgICAgcGFkZGluZzogMCAhaW1wb3J0YW50O1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAyMnB4O1xyXG4gICAgfSAgICBcclxufVxyXG4iLCIubWF0LW1pbmktZmFiIHtcbiAgaGVpZ2h0OiAyMnB4O1xuICB3aWR0aDogMjJweDtcbiAgYm9yZGVyLXJhZGl1czogODAlO1xuICBsaW5lLWhlaWdodDogMjJweDtcbn1cbi5tYXQtbWluaS1mYWI6Om5nLWRlZXAgLm1hdC1idXR0b24td3JhcHBlciB7XG4gIHBhZGRpbmc6IDAgIWltcG9ydGFudDtcbiAgbGluZS1oZWlnaHQ6IDIycHg7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\r\nimport { ICellRendererParams } from 'ag-grid';\r\nimport { RowNode } from 'ag-grid/dist/lib/entities/rowNode';\r\n\r\n@Component({\r\n  selector: 'app-mat-remove-button-grid-render',\r\n  template: `<button mat-mini-fab color=\"primary\" (click)=\"remove()\">\r\n              <mat-icon  inline=\"true\">remove</mat-icon>\r\n            </button>`,\r\n  styleUrls: ['./mat-remove-button-grid-render.component.scss']\r\n})\r\nexport class MatRemoveButtonGridRenderComponent implements ICellRendererAngularComp {\r\n\r\n  public params: ICellRendererParams;\r\n\r\n  agInit(params: ICellRendererParams): void {\r\n      this.params = params;\r\n  }\r\n\r\n  public remove() {\r\n    let data = this.params.data;\r\n    this.params.context.componentParent.removeFromComponent(data);\r\n  }\r\n\r\n  refresh(): boolean {\r\n      return false;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatRemoveButtonGridRenderComponent } from './mat-remove-button-grid-render.component';\r\nimport { MatButtonModule, MatIconModule } from '@angular/material';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    MatButtonModule,\r\n    MatIconModule\r\n  ],\r\n  entryComponents: [MatRemoveButtonGridRenderComponent],\r\n  declarations: [ MatRemoveButtonGridRenderComponent ]\r\n})\r\nexport class MatRemoveButtonGridRenderModule { }\r\n","export class Holiday {\r\n    \r\n    date : Date = null;\r\n    description : string = '';\r\n\r\n    constructor(values: Object = {}) {\r\n        Object.assign(this, values);\r\n    }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbGlkYXlzL2hvbGlkYXlzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Holiday } from './holiday';\nimport { NgForm } from '@angular/forms';\nimport { GridApi, GridOptions } from 'ag-grid';\nimport { HolidaysService } from './holidays.service';\nimport { MatEditButtonGridRenderComponent } from '../grid-custom-components/mat-edit-button-grid-render/mat-edit-button-grid-render.component';\nimport { MatRemoveButtonGridRenderComponent } from '../grid-custom-components/mat-remove-button-grid-render/mat-remove-button-grid-render.component';\nimport { Observable } from 'rxjs';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { AgFormatterService } from '../shared/ag-formatter.service';\n\n@Component({\n  selector: 'app-holidays',\n  templateUrl: './holidays.component.html',\n  styleUrls: ['./holidays.component.scss']\n})\nexport class HolidaysComponent implements OnInit {\n  public holiday = new Holiday();\n  public years: number;\n  public context;\n\n  @ViewChild('myForm',{static: false}) myForm : NgForm;\n  \n  private gridApi: GridApi;\n  private gridColumnApi;\n  private columnDefs: any;\n  private rowData: Holiday[];\n  private gridOptions: GridOptions;\n  private errorMessage : string = \"\";\n  private isEditMode: boolean = false;\n\n  constructor(private holidayService: HolidaysService, private frm: AgFormatterService) {\n\n    this.context = { componentParent: this };\n\n    this.gridOptions = <GridOptions>{};\n    this.gridOptions.enableFilter = true;\n    this.gridOptions.enableSorting = true;\n    this.gridOptions.rowSelection = 'simple';\n    this.gridOptions.suppressRowClickSelection = false;\n    this.gridOptions.enableColResize = true;\n\n    this.columnDefs = [\n      { headerName: 'Date', field: 'date', filter: 'text', valueFormatter: this.frm.ag_dateFormatter , width: 170 },\n      { headerName: 'Description', field: 'description', filter: 'text', width: 250 },\n      { headerName: '', cellRendererFramework: MatEditButtonGridRenderComponent, width: 40 },\n      { headerName: '', suppressFilter: true, cellRendererFramework: MatRemoveButtonGridRenderComponent, width: 40 }\n    ];\n  }\n\n  ngOnInit(): void {\n    this.populateHolidays();\n  }\n\n  refeshHolidays(): void {\n    this.populateHolidays();\n    this.initialMode();\n    this.resetControls();\n  }\n\n  private populateHolidays() {\n    this.holidayService.getHolidays().subscribe(\n      userList => this.rowData = userList, \n      error => this.handleError(error)\n    );\n  }\n\n  dateFormatter(params: any) {\n    return new Date(params.value).toLocaleDateString(\"es-ES\",{timeZone: 'UTC', year:\"numeric\",month:\"2-digit\", day:\"2-digit\"});\n  }\n\n  get holidays(): Observable<Holiday[]> {\n    return this.holidayService.getHolidays();\n  }\n  \n  getHolidayByDate(date: Date): Observable<Holiday> {\n    return this.holidayService.getHolidayByDate(date);\n  }\n\n  removeHoliday(date: Date) {\n    this.holidayService.deleteHolidayByDate(date).subscribe(\n      data => this.refeshHolidays(),\n      error => console.log(error)\n    );\n  }\n\n  editHoliday(data: Holiday) {\n    this.holiday = new Holiday(data);\n    this.errorMessage = \"\";\n    this.years = NaN;\n  }\n  \n  addHoliday(): void {\n    this.holidayService.addHoliday(this.holiday).subscribe(\n      data => this.refeshHolidays(),\n      error => this.handleError(error)\n    );\n  }\n\n  addHolidaysForYears(): void {\n    this.holidayService.addHolidaysForYears(this.holiday,this.years).subscribe(\n      data => this.refeshHolidays(),\n      error => this.handleError(error)\n    );\n  }\n\n  handleError(res: HttpErrorResponse) {\n      this.errorMessage = res.error.error_message; \n      console.log(res);\n  }\n\n  updateHoliday(){\n    this.holidayService.updateHoliday(this.holiday).subscribe(\n      data => this.refeshHolidays(),\n      error => this.handleError(error)\n    );\n  }\n\n  resetControls() {\n    this.myForm.resetForm();\n    Object.keys(this.myForm.controls).forEach(field => {      \n      const control = this.myForm.control.get(field);         \n      control.markAsUntouched();\n    });\n  }\n\n  // Call from MatRemoveButtonGridRenderComponent\n  removeFromComponent(holiday: Holiday){\n    this.removeHoliday(holiday.date);\n    this.initialMode();\n  }\n\n  // Call from MatEditButtonGridRenderComponent\n  editFromComponent(data: Holiday){\n    this.isEditMode = true;\n    this.editHoliday(data);\n  }\n\n  cancelEditMode() {\n    this.initialMode();\n  }  \n\n  private initialMode() {\n    this.holiday = new Holiday();\n    this.errorMessage = \"\";\n    this.isEditMode = false;\n    this.resetControls();\n  }\n\n  onGridReady(params: any) {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    this.gridColumnApi.autoSizeColumns();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from '../shared/shared.module';\nimport { AgGridModule } from 'ag-grid-angular';\nimport { HolidaysComponent } from './holidays.component';\n\n@NgModule({\n  declarations: [HolidaysComponent],\n  imports: [\n    SharedModule,\n    AgGridModule.withComponents([])  ]\n})\nexport class HolidaysModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Holiday } from './holiday';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HolidaysService {\n  private baseUrl = './api/holidays';\n\n  constructor(public http: HttpClient) {\n  }\n\n  getHolidays() : Observable<Holiday[]>{\n    return this.http.get(this.baseUrl) as Observable<Holiday[]>;\n  }\n\n  getHolidayByDate(date : Date): Observable<Holiday> {\n    return this.http.get(`${this.baseUrl}/${date}`) as Observable<Holiday>;\n  }\n\n  addHoliday(holiday: Holiday): Observable<Holiday>  {\n      return this.http.post(this.baseUrl, holiday)  as Observable<Holiday>;\n  }\n\n  addHolidaysForYears(holiday: Holiday,years: number): Observable<Holiday>  {\n    return this.http.post(`${this.baseUrl}/${years}`, holiday)  as Observable<Holiday>;\n  }\n\n  deleteHolidayByDate(date: Date) : Observable<Holiday> {\n    return this.http.delete(`${this.baseUrl}/${date}`)  as Observable<Holiday>;\n  }\n\n  updateHoliday(holiday : Holiday): Observable<Holiday> {\n    return this.http.put(`${this.baseUrl}/${holiday.date}`, holiday) as Observable<Holiday>;\n  }\n\n}\n","module.exports = \".login-content {\\n  margin: 0;\\n  height: 100%;\\n  width: 100%;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  font-family: Roboto, sans-serif;\\n  background: url('login-background.jpg') no-repeat center center fixed;\\n  background-size: cover;\\n}\\n\\nmat-card {\\n  max-width: 40%;\\n  margin: 1em auto;\\n  line-height: 100%;\\n}\\n\\nlogin-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vQzpcXGdtYWNcXHN0c193b3Jrc3BhY2VzXFxob3l4aG95LXBsYW5uZXJcXGhveXhob3ktcGxhbm5lci1mcm9udGVuZC9zcmNcXGFwcFxcbG9naW5cXGxvZ2luLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9sb2dpbi9sb2dpbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFNBQUE7RUFDQSxZQUFBO0VBQ0EsV0FBQTtFQUNBLGFBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0VBQ0EsK0JBQUE7RUFDQSxxRUFBQTtFQUlBLHNCQUFBO0FDQ0Y7O0FERUE7RUFDRSxjQUFBO0VBQ0EsZ0JBQUE7RUFDQSxpQkFBQTtBQ0NGOztBRElBO0VBQ0UsZ0JBQUE7RUFDQSxnQkFBQTtFQUNBLFdBQUE7QUNERiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmxvZ2luLWNvbnRlbnQge1xyXG4gIG1hcmdpbjogMDtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgd2lkdGg6IDEwMCU7ICBcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgZm9udC1mYW1pbHk6IFJvYm90bywgc2Fucy1zZXJpZjtcclxuICBiYWNrZ3JvdW5kOiB1cmwoLi4vLi4vYXNzZXRzL2xvZ2luLWJhY2tncm91bmQuanBnKSBuby1yZXBlYXQgY2VudGVyIGNlbnRlciBmaXhlZDsgXHJcbiAgLXdlYmtpdC1iYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gIC1tb3otYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuICAtby1iYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbn1cclxuXHJcbm1hdC1jYXJkIHtcclxuICBtYXgtd2lkdGg6IDQwJTtcclxuICBtYXJnaW46IDFlbSBhdXRvO1xyXG4gIGxpbmUtaGVpZ2h0IDogMTAwJTtcclxuLy8gIHBhZGRpbmc6IDIwcHggNDBweDtcclxuLy8gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxubG9naW4tZm9ybSB7XHJcbiAgbWluLXdpZHRoOiAxNTBweDtcclxuICBtYXgtd2lkdGg6IDUwMHB4O1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcbiIsIi5sb2dpbi1jb250ZW50IHtcbiAgbWFyZ2luOiAwO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiAxMDAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZm9udC1mYW1pbHk6IFJvYm90bywgc2Fucy1zZXJpZjtcbiAgYmFja2dyb3VuZDogdXJsKC4uLy4uL2Fzc2V0cy9sb2dpbi1iYWNrZ3JvdW5kLmpwZykgbm8tcmVwZWF0IGNlbnRlciBjZW50ZXIgZml4ZWQ7XG4gIC13ZWJraXQtYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgLW1vei1iYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAtby1iYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xufVxuXG5tYXQtY2FyZCB7XG4gIG1heC13aWR0aDogNDAlO1xuICBtYXJnaW46IDFlbSBhdXRvO1xuICBsaW5lLWhlaWdodDogMTAwJTtcbn1cblxubG9naW4tZm9ybSB7XG4gIG1pbi13aWR0aDogMTUwcHg7XG4gIG1heC13aWR0aDogNTAwcHg7XG4gIHdpZHRoOiAxMDAlO1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { LoginService } from './login.service';\r\nimport { LoginUser } from './loginUser';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { User } from '../users/user';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent {\r\n\r\n  private username : string = \"\";\r\n  private password : string = \"\";\r\n  private errorMessage : string = \"\";\r\n\r\n  constructor(public loginService: LoginService, private router: Router) { }\r\n\r\n  login() {\r\n      this.loginService.loginWithUsername(this.username, this.password).subscribe((loginUser:User) => {\r\n        this.loginService.currentUser = loginUser;\r\n        this.router.navigate(['']);\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n        this.errorMessage = error.status==404 ? \"Invalid user name or password\":\"Known Error\";\r\n        console.log(error);\r\n        this.router.navigate(['/login']);\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    this.loginService.signOut();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Project } from '../projects/project';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { LoginUser } from './loginUser';\nimport { Spring } from '../springs/spirng';\nimport { User } from '../users/user';\n\n@Injectable()\nexport class LoginService {\n\n  private userState: User = null;\n  private projectState: Project = null;\n  private springState: Spring = null;\n \n  //public loginUserObs: Observable<LoginUser[]>;\n  private baseUrl = './api/login';\n\n  constructor(public http: HttpClient) {\n  }\n \n  get isUserAnonymousLoggedIn(): boolean {\n    return false;\n  }\n \n  get currentUserName(): string {\n    return this.userState !== null ? this.userState.username : 'Usuario Anónimo';\n  }\n\n  get currentName(): string {\n    return this.userState !== null ? this.userState.name : 'Usuario Anónimo';\n  }\n  \n  get currentUser(): User {\n    return (this.userState !== null) ? this.userState : null;\n  }\n\n  set currentUser(user: User) {\n    this.userState = user;\n  }\n\n  get currentProject() : Project {\n    return (this.projectState !== null) ? this.projectState : null;\n  }\n\n  set currentProject( project : Project) {\n    this.projectState = project;\n  }\n\n  get currentProjectId() : number {\n    return (this.projectState !== null) ? this.projectState.id : NaN;\n  }\n\n  get currentProjectName() : string {\n    return (this.projectState !== null) ? this.projectState.code + ' - ' + this.projectState.name : 'Select a project';\n  }\n\n  get currentSpring() : Spring {\n    return (this.springState !== null) ? this.springState : null;\n  }\n\n  set currentSpring( spring : Spring) {\n    this.springState = spring;\n  }\n\n  get currentSpringId() : number {\n    return (this.springState !== null) ? this.springState.id : NaN;\n  }\n\n  get currentSpringName() : string {\n    return '& ' + ((this.springState !== null) ? this.springState.code + ' - ' + this.springState.name : 'Select a spring');\n  }\n\n  public get isUserLoggedIn(): boolean {\n//    if ((this.userState !== null) && (!this.isUserAnonymousLoggedIn)) {\n    return (this.userState != null)\n  }\n \n//  public createUserWithEmail(email: string, password: string) :Promise<any> {\n//    return this.afAuth.auth.createUserWithEmailAndPassword(email, password);\n//  }\n \n  public loginWithUsername(username: string, password: string) {\n    return this.http.put(`${this.baseUrl}/${username}`, password) as Observable<User>;\n  }\n \n  public signOut(): void {\n       this.userState = null;\n//     this.http.get(`${this.baseUrl}/login/singout/${this.userState.username}`);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL291dGxvb2svb3V0bG9vay5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-outlook',\n  templateUrl: './outlook.component.html',\n  styleUrls: ['./outlook.component.scss']\n})\nexport class OutlookComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { OutlookComponent } from './outlook.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { AgGridModule } from 'ag-grid-angular';\n\n@NgModule({\n  declarations: [OutlookComponent],\n  imports: [\n    SharedModule,\n    AgGridModule.withComponents([])\n  ]\n})\nexport class OutlookModule { }\n","export class Project {\r\n    \r\n    id : number; \r\n    code : string = '';\r\n    name : string = '';\r\n    startDate : Date;\r\n    springDays : number;\r\n//    status: string = '';\r\n//    backlog: any;\r\n\r\n    constructor(values: Object = {}) {\r\n        Object.assign(this, values);\r\n    }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2plY3RzL3Byb2plY3RzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\nimport { Project } from './project';\nimport { Subscription, Observable } from 'rxjs';\nimport { NgForm } from '@angular/forms';\nimport { GridApi, GridOptions } from 'ag-grid';\nimport { ProjectsService } from './projects.service';\nimport { Router } from '@angular/router';\nimport { MatEditButtonGridRenderComponent } from '../grid-custom-components/mat-edit-button-grid-render/mat-edit-button-grid-render.component';\nimport { MatRemoveButtonGridRenderComponent } from '../grid-custom-components/mat-remove-button-grid-render/mat-remove-button-grid-render.component';\nimport { LoginService } from '../login/login.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { AgFormatterService } from '../shared/ag-formatter.service';\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.scss']\n})\nexport class ProjectsComponent implements OnInit {\n\n  public project = new Project();\n//  public projectSelected = new Project();\n  public context: any;\n  \n  @ViewChild('myForm', { static: false }) myForm: NgForm;\n  \n  private gridApi: GridApi;\n  private gridColumnApi;\n  private columnDefs: any;\n  private rowData: Project[];\n  private gridOptions: GridOptions;\n  private errorMessage : string = \"\";\n  private isEditMode: boolean = false;\n\n  constructor(private projectsService: ProjectsService, private loginService: LoginService, private router: Router, private frm: AgFormatterService) {\n\n    this.context = { componentParent: this };\n\n    this.gridOptions = <GridOptions>{};\n    this.gridOptions.enableFilter = true;\n    this.gridOptions.enableSorting = true;\n    this.gridOptions.rowSelection = 'single';\n\n    this.columnDefs = [\n      { headerName: 'Id', field: 'id', hide: true },\n      { headerName: 'Code', field: 'code', filter: 'text', width: 120 },\n      { headerName: 'Name', field: 'name', filter: 'text', width: 250 },\n      { headerName: 'Start Date', field: 'startDate', filter: 'date', width: 140, valueFormatter: this.frm.ag_dateFormatter },\n      { headerName: 'Spring Days', field: 'springDays', type: \"numericColumn\", filter: 'number',width: 150 },\n      { headerName: 'Status', field: 'status', filter: 'text', width: 120 },\n      { headerName: '', cellRendererFramework: MatEditButtonGridRenderComponent, width: 40 },\n      { headerName: '', suppressFilter: true, cellRendererFramework: MatRemoveButtonGridRenderComponent, width: 40 }\n    ];\n  }\n\n  ngOnInit(): void {\n    this.populateProjects();\n  }\n\n  refeshProjects(): void {\n    this.populateProjects();\n    this.initialMode();\n  }\n\n  private populateProjects() {\n    this.projects.subscribe(\n      projectList => this.rowData = projectList, \n      error => this.handleError(error)\n    );\n  }\n\n  get projects(): Observable<Project[]> {\n    return this.projectsService.getProjects();\n  }\n  \n  getProjectById(id: number): Observable<Project> {\n    return this.projectsService.getProjectById(id);\n  }\n\n  removeProject(id: number) {\n    this.projectsService.deleteProjectById(id).subscribe(\n      data => this.refeshProjects(),\n      error => console.log(error)\n    );\n  }\n\n  editProject(data: Project) {\n    this.project = new Project(data);\n    this.errorMessage = \"\";\n  }\n  \n  addProject(): void {\n  //  this.project.status = \"OPEN\";\n    this.projectsService.addProject(this.project).subscribe(\n      data => this.refeshProjects(),\n      error => this.handleError(error)\n    );\n  }\n\n  handleError(res: HttpErrorResponse) {\n      this.errorMessage = res.error.error_message; \n      console.log(res);\n  }\n\n  updateProject(){\n    this.projectsService.updateProject(this.project).subscribe(\n      data => this.refeshProjects(),\n      error => this.handleError(error)\n    );\n  }\n\n  resetControls() {\n    this.myForm.resetForm();\n    Object.keys(this.myForm.controls).forEach(field => {      \n      const control = this.myForm.control.get(field);         \n      control.markAsUntouched();\n    });\n  }\n\n  // Call from MatRemoveButtonGridRenderComponent\n  removeFromComponent(project: Project){\n    this.removeProject(project.id);\n    this.initialMode();\n  }\n\n  // Call from MatEditButtonGridRenderComponent\n  editFromComponent(data: Project){\n    this.isEditMode = true;\n    this.editProject(data);\n  }\n\n  cancelEditMode() {\n    this.initialMode();\n  }  \n\n  private initialMode() {\n    this.project = new Project();\n    this.errorMessage = \"\";\n    this.isEditMode = false;\n    this.resetControls();\n  }\n\n  onGridReady(params: any) {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    this.gridColumnApi.autoSizeColumns();\n  }\n\n  onSelectionChanged() {\n    var selectedRows = this.gridApi.getSelectedRows();\n    var selectedRowAux: any;\n    selectedRows.forEach(function(row, index) {\n//      if (index !== 0) {\n//        selectedRowsString += \", \";\n//      }\n        selectedRowAux = row;\n    });\n    this.loginService.currentProject = selectedRowAux;\n    if (this.loginService.currentSpring===null) {\n      this.router.navigate(['/springs']);\n    }\n//    this.projectSelected = selectedRowAux;\n//    document.querySelector(\"#selectedRows\").innerHTML = selectedRowsString;\n  }  \n}\n","import { NgModule } from '@angular/core';\nimport { AgGridModule } from 'ag-grid-angular';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { ProjectsComponent } from './projects.component';\nimport { environment } from '../../environments/environment';\nimport { DatePipe } from '@angular/common';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    AgGridModule.withComponents([])\n  ],\n  declarations: [ProjectsComponent]\n})\nexport class ProjectsModule { }\n","import { Injectable } from '@angular/core';\nimport { Project } from './project';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectsService {\n  private baseUrl = './api/projects';\n\n  constructor(private http: HttpClient) {\n  }\n\n  getProjects() : Observable<Project[]>{\n    return this.http.get(this.baseUrl) as Observable<Project[]>;\n  }\n\n  getProjectById(id : number): Observable<Project> {\n    return this.http.get(`${this.baseUrl}/${id}`) as Observable<Project>;\n  }\n\n  addProject(project: Project): Observable<Project>  {\n      return this.http.post(this.baseUrl, project)  as Observable<Project>;\n  }\n\n  deleteProjectById(id: number) : Observable<Project> {\n    return this.http.delete(`${this.baseUrl}/${id}`)  as Observable<Project>;\n  }\n\n  updateProject(project : Project): Observable<Project> {\n    return this.http.put(`${this.baseUrl}/${project.id}`, project) as Observable<Project>;\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\nexport class AgFormatterService {\r\n\r\n    ag_dateFormatter(params: any): string {\r\n       return new Date(params.value).toLocaleDateString(undefined,{timeZone: 'UTC', year:\"numeric\",month:\"2-digit\", day:\"2-digit\"});\r\n    }\r\n    \r\n    ag_numberTwoDecimalFormatter(params: any) : string {\r\n      if (params.value || params.value == 0) {\r\n         return params.value.toLocaleString(undefined, {minimumFractionDigits: 2, maximumFractionDigits: 2})\r\n       }\r\n       return params.value;\r\n    }\r\n\r\n    setTwoNumberDecimal(event: any) {\r\n      event.target.value = parseFloat(event.target.value).toFixed(2);\r\n    }\r\n    \r\n    validateNumberTwoDecimal(event: any) {\r\n      //let input = String.fromCharCode(e.charCode);\r\n      let specialKeys: Array<string> = ['Backspace', 'Tab', 'End', 'Home', '-', 'ArrowLeft', 'ArrowRight', 'Del', 'Delete'];\r\n      if (specialKeys.indexOf(event.key) !== -1) {\r\n         return;\r\n       }\r\n   \r\n      let input = event.srcElement.value\r\n      let input2 = event.target.value\r\n      const reg = new RegExp(/^\\d+[.,]?\\d{0,2}$/g);\r\n  \r\n//      if (!reg.test(input)) {\r\n//        e.preventDefault();\r\n//      }\r\n   }\r\n\r\n}","export class DateModel {\r\n    \r\n    private _value : Date;\r\n\r\n    constructor(val: string) {\r\n        this._value =val && val.length > 0? new Date(val) : new Date();\r\n    }\r\n\r\n    get value() : string {\r\n        return this.toString();\r\n    }\r\n\r\n    set value(val : string) {\r\n        this._value =val && val.length > 0? new Date(val) : new Date();\r\n    }\r\n\r\n    public setDate(value : Date) {\r\n        this._value = value;\r\n    }\r\n\r\n    public addDays(days :number) {\r\n        this._value.setDate(this._value.getDate() + days);\r\n    }\r\n\r\n    public setAddDays(dateM : DateModel, days: number) {\r\n        this._value = new Date(dateM._value);\r\n        this.addDays(days);\r\n    }\r\n\r\n    public setAddWorkableDays(dateM : DateModel, days: number) {\r\n        this._value = new Date(dateM._value);\r\n        let wdays = this._value.getDay() + days - 1;\r\n        let workableDays = days - 1 + Math.trunc(wdays/5)*2;\r\n        this.addDays(workableDays);\r\n    }\r\n\r\n    public greaterThan(otherValue : string | Date | DateModel ) : boolean {\r\n        return this._value > this.toDate(otherValue);\r\n    }\r\n\r\n    public greaterOrEqualsThan(otherValue : string | Date | DateModel ) : boolean {\r\n        return this._value >= this.toDate(otherValue);\r\n    }\r\n    \r\n    public lessThan(otherValue : string | Date | DateModel ) : boolean {\r\n        return this._value < this.toDate(otherValue);\r\n    }\r\n\r\n    public equalsThan(otherValue : string | Date | DateModel ) : boolean {\r\n        return this._value == this.toDate(otherValue);\r\n    }\r\n\r\n    public getDate() : Date {\r\n        return this._value;\r\n    }\r\n\r\n    public toDate(value : string | Date | DateModel) : Date {\r\n        let valueToDate:Date = null;\r\n         if (typeof value === 'string') {\r\n            valueToDate = new Date(value);\r\n        } else if (value instanceof Date) {\r\n            valueToDate = <Date>value;\r\n        } else {\r\n            valueToDate = (<DateModel>value)._value;\r\n        }\r\n        return valueToDate;\r\n    }\r\n\r\n    public toString() {\r\n        return this._value.toISOString().split('T')[0];\r\n    }\r\n\r\n}\r\n\r\nexport enum Day_of_week {\r\n    Monday,\t\r\n    Tuesday,\r\n    Wednesday,\r\n    Thursday,\r\n    Friday,\r\n    Saturday,\r\n    Sunday    \r\n}\r\n","import { AbstractControl, NG_VALIDATORS } from \"@angular/forms\";\r\nimport { Directive } from \"@angular/core\";\r\nimport { Day_of_week } from \"./date.model\";\r\n\r\nfunction noWeekend(c:AbstractControl) {\r\n    if (c.value == null) return null;\r\n    let day = new Date(c.value).getDay();\r\n    if (day == Day_of_week.Saturday || day == Day_of_week.Sunday ) {\r\n        return {weekend: true};\r\n    }\r\n    return null;\r\n}\r\n\r\n@Directive({\r\n    selector: '[no-weekend]',\r\n    providers: [\r\n        {provide: NG_VALIDATORS, multi: true, useValue: noWeekend }\r\n    ]\r\n})\r\nexport class NoWeekendValidator { }","import { Directive, ElementRef, HostListener } from '@angular/core';\r\n@Directive({\r\n  selector: '[twoDigitDecimalNumber]'\r\n})\r\nexport class TwoDigitDecimalNumber {\r\n  private regex: RegExp = new RegExp(/^\\d+[.,]?\\d{0,2}$/g);\r\n  private specialKeys: Array<string> = ['Backspace', 'Tab', 'End', 'Home', '-', 'ArrowLeft', 'ArrowRight', 'Del', 'Delete'];\r\n  constructor(private el: ElementRef) {\r\n    console.log(this.el.nativeElement.value);\r\n  }\r\n  @HostListener('keydown', ['$event'])\r\n  onKeyDown(event: KeyboardEvent) {\r\n    console.log(this.el.nativeElement.value);\r\n    // Allow Backspace, tab, end, and home keys\r\n    if (this.specialKeys.indexOf(event.key) !== -1) {\r\n      return;\r\n    }\r\n    let current: string = this.el.nativeElement.value;\r\n    const position = this.el.nativeElement.selectionStart;\r\n    const next: string = [current.slice(0, position), event.key == 'Decimal' ? '.' : event.key, current.slice(position)].join('');\r\n    if (next && !String(next).match(this.regex)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {\r\n  MatButtonModule,\r\n  MatIconModule,\r\n  MatCardModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatTableModule,\r\n  MatTooltipModule,\r\n  MatCheckboxModule,\r\n  MatSelectModule,\r\n  MatStepperModule,\r\n} from '@angular/material';\r\n\r\nimport { MatCheckboxGridModule } from '../grid-custom-components/mat-checkbox-grid/mat-checkbox-grid.module';\r\nimport { MatRemoveButtonGridRenderModule } from '../grid-custom-components/mat-remove-button-grid-render/mat-remove-button-grid-render.module';\r\nimport { MatEditButtonGridRenderModule } from '../grid-custom-components/mat-edit-button-grid-render/mat-edit-button-grid-render.module';\r\nimport { NoWeekendValidator } from './date.weekend.directive';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { TwoDigitDecimalNumber } from './decimal.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    BrowserModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatTableModule,\r\n    MatTooltipModule,\r\n    MatCheckboxModule,\r\n    MatSelectModule,\r\n    BrowserAnimationsModule,\r\n    MatCheckboxGridModule,\r\n    MatRemoveButtonGridRenderModule,\r\n    MatEditButtonGridRenderModule,\r\n    MatStepperModule\r\n  ],\r\n  exports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    BrowserModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatTableModule,\r\n    MatTooltipModule,\r\n    MatCheckboxModule,\r\n    MatSelectModule,\r\n    BrowserAnimationsModule,\r\n    MatCheckboxGridModule,\r\n    MatRemoveButtonGridRenderModule,\r\n    MatEditButtonGridRenderModule,\r\n    MatStepperModule\r\n  ],\r\n  declarations: [NoWeekendValidator,TwoDigitDecimalNumber]\r\n})\r\nexport class SharedModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NwZW5kaW5nL3NwZW5kaW5nLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\nimport { Subscription, Observable } from 'rxjs';\nimport { NgForm } from '@angular/forms';\nimport { GridApi, GridOptions } from 'ag-grid';\nimport { LoginService } from '../login/login.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { User } from '../users/user';\nimport { Feature } from '../backlog/feature';\nimport { FeaturesService } from '../backlog/features.service';\nimport { UserService } from '../users/users.service';\nimport { SpendingService } from './spending.service';\nimport { Asignment } from '../asignment/asignment';\nimport { DateModel } from '../shared/date.model';\nimport { AgFormatterService } from '../shared/ag-formatter.service';\n\n@Component({\n  selector: 'app-spending',\n  templateUrl: './spending.component.html',\n  styleUrls: ['./spending.component.scss']\n})\nexport class SpendingComponent implements OnInit {\n\n  public context: any;\n  \n  @ViewChild('myForm', { static: false }) myForm: NgForm;\n  \n  private gridApi: GridApi;\n  private gridColumnApi;\n  private columnDefs: any;\n  private rowData: Asignment[];\n  private features : Feature[];\n  private users : User[];\n  private gridOptions: GridOptions;\n  private errorMessage : string = \"\";\n  private isEditMode: boolean = false;\n\n  constructor(private spendingsService: SpendingService, private featuresService :FeaturesService, private userService :UserService, private loginService: LoginService, private frm: AgFormatterService) {\n\n    this.context = { componentParent: this };\n\n    this.gridOptions = <GridOptions>{};\n    this.gridOptions.enableFilter = true;\n    this.gridOptions.enableSorting = true;\n    this.gridOptions.rowSelection = 'single';\n    this.gridOptions.suppressRowClickSelection = false;\n    this.gridOptions.enableColResize = true;\n    this.gridOptions.enableCellChangeFlash = true;\n    this.gridOptions.getRowStyle = function(params: any) {\n      if (params.data.feature.estimatedHours - params.data.spending === 0) {\n          return { background: \t'#DAEFFE' }\n      }\n    }\n    this.gridOptions.headerHeight = 65;\n//    this.gridOptions.defaultColDef = { headerComponentParams : {\n//          menuIcon: 'fa-bars',\n//          template:\n//          '<div class=\"ag-cell-label-container\" role=\"presentation\">' +\n//          '  <span ref=\"eMenu\" class=\"ag-header-icon ag-header-cell-menu-button\"></span>' +\n//          '  <div ref=\"eLabel\" class=\"ag-header-cell-label\" role=\"presentation\">' +\n//          '    <span ref=\"eSortOrder\" class=\"ag-header-icon ag-sort-order\" ></span>' +\n//          '    <span ref=\"eSortAsc\" class=\"ag-header-icon ag-sort-ascending-icon\" ></span>' +\n//          '    <span ref=\"eSortDesc\" class=\"ag-header-icon ag-sort-descending-icon\" ></span>' +\n//          '    <span ref=\"eSortNone\" class=\"ag-header-icon ag-sort-none-icon\" ></span>' +\n//          '    ** <span ref=\"eText\" class=\"ag-header-cell-text\" role=\"columnheader\"></span>' +\n//          '    <span ref=\"eFilter\" class=\"ag-header-icon ag-filter-icon\"></span>' +\n//          '  </div>' +\n//          '</div>'\n//      } }\n\n    this.columnDefs = [\n      { headerName: 'Id', field: 'id', hide: true },\n      { headerName: 'F.Code', field: 'feature.code', filter: 'text', width: 100},\n      { headerName: 'Feature Title', field: 'feature.title', filter: 'text', width: 200 },\n      { headerName: 'Estimated', field: 'feature.estimatedHours', type: \"numericColumn\", filter: 'number', valueFormatter: this.frm.ag_numberTwoDecimalFormatter ,width: 100 },\n      { headerName: 'Spending', field: 'spending', type: \"numericColumn\", filter: 'number', valueFormatter: this.frm.ag_numberTwoDecimalFormatter, width: 100 },\n      { headerName: 'Asigned', field: 'user.name', filter: 'text' , width: 150 }\n    ];\n\n    for (let index = 0; index < loginService.currentSpring.springDays; index++) {\n//        this.columnDefs.push( { headerName : this.dateHeader(index+1), children: [{ headerName: index+1, valueGetter: (params: any) => params.data.spendingsInt[index], valueSetter: (params: any) => this.valueSetter(params,index), editable: true, suppressSorting: true, suppressMenu : true, type: \"numericColumn\", width: 55 }] })\n//      this.columnDefs.push({ headerName: index+1, valueGetter: (params: any) => params.data.spendingsInt[index], valueSetter: (params: any) => this.valueSetter(params,index), editable: true, suppressSorting: true, suppressMenu : true, type: \"numericColumn\", width: 55 })\n          this.columnDefs.push({ headerName: this.dateHeader(index+1), valueGetter: (params: any) => params.data.spendingsInt[index], valueSetter: (params: any) => this.valueSetter(params,index), editable: true, suppressSorting: true, suppressMenu : true, type: \"text\", valueFormatter: this.frm.ag_numberTwoDecimalFormatter, width: 55, headerComponentParams : {template: this.getHeaderTemplate()} })\n        }\n  }\n\n  valueSetter(params: any, index: number) {\n    let ret = false;\n    this.errorMessage = \"\";\n    params.newValue = params.newValue.length == 0 ? params.newValue : params.newValue.replace(\",\",\".\");\n    if (params.newValue.length == 0) {\n        params.data.spendingsInt[index] = null;\n        ret = true;\n    } else if (!isNaN(+params.newValue)) {\n          params.data.spendingsInt[index] = Math.round(+params.newValue * 100) / 100;\n      ret = true;\n    }\n    params.data.calculateSumSpending();\n    if (params.data.feature.estimatedHours < params.data.spending) {\n      this.errorMessage = \"It has been consummed all the feature estimaded time, you must extend it\"\n      params.data.spendingsInt[index] = null;\n      params.data.calculateSumSpending();\n      params.data.spendingsInt[index] = params.data.feature.estimatedHours - params.data.spending;\n      params.data.calculateSumSpending();\n    }\n    return ret;\n  }\n\n  ngOnInit(): void {\n    this.populateAsignments();\n  }\n\n  refeshAsignments(): void {\n    this.populateAsignments();\n    this.initialMode();\n  }\n\n  private populateAsignments() {\n//    asignmentList =>   this.rowData = asignmentList.map(asign => new Asignment(asign).addSpendings(this.loginService.currentSpring.springDays)),\n    this.asignments.subscribe(\n      asignmentList =>   this.rowData = asignmentList.map(asign => new Asignment(asign)),\n      error => this.handleError(error)\n    );\n  }\n\n  dateFormatter(params: any) {\n    return new Date(params.value).toLocaleDateString(\"es-ES\",{timeZone: 'UTC', year:\"numeric\",month:\"2-digit\", day:\"2-digit\"});\n  }\n\n  getHeaderTemplat2() : string {\n    return  '<div class=\"ag-cell-label-container\" role=\"presentation\">' +\n    '  <span ref=\"eMenu\" class=\"ag-header-icon ag-header-cell-menu-button\"></span>' +\n    '  <div ref=\"eLabel\" class=\"ag-header-cell-label\" role=\"presentation\">' +\n    '    <span ref=\"eSortOrder\" class=\"ag-header-icon ag-sort-order\" ></span>' +\n    '    <span ref=\"eSortAsc\" class=\"ag-header-icon ag-sort-ascending-icon\" ></span>' +\n    '    <span ref=\"eSortDesc\" class=\"ag-header-icon ag-sort-descending-icon\" ></span>' +\n    '    <span ref=\"eSortNone\" class=\"ag-header-icon ag-sort-none-icon\" ></span>' +\n    '    ** <span ref=\"eText\" class=\"ag-header-cell-text\" role=\"columnheader\"></span>' +\n    '    <span ref=\"eFilter\" class=\"ag-header-icon ag-filter-icon\"></span>' +\n    '  </div>' +\n    '</div>';\n  }\n\n  getHeaderTemplate() : string {\n    return  '<div class=\"ag-cell-label-container ag-header-center\" role=\"presentation\">' +\n    '    <span ref=\"eText\" class=\"ag-header-cell-text\" role=\"columnheader\"></span>' +\n    '</div>';\n  }\n\n  dateHeader(numDay: number) {\n    let dtM = new DateModel(this.loginService.currentSpring.startDate.toString());\n    dtM.setAddWorkableDays(dtM,numDay);\n    return numDay + \"</br>\" + this.getDayAndMounthFromDate(dtM.getDate()) + \"</br>\" + this.getWeekdayFromDate(dtM.getDate());\n  }\n\n  getDayAndMounthFromDate(d: Date): string {\n    let format = d.toLocaleDateString(undefined,{timeZone: 'UTC', year:\"numeric\" ,month:\"2-digit\", day:\"2-digit\"});\n     // Check locale format and strip year\n    if(format.match(/.[0-9]{4}/g) ){\n       format = format.replace(/.[0-9]{4}/, '');\n    } else if( format.match(/[0-9]{4}./g) ){\n      format = format.replace(/[0-9]{4}./, '');\n    } else if( format.match(new RegExp('/[0-9]{4}') ) ) {\n      format = format.replace(new RegExp('/[0-9]{4}'), '');\n    } else if( format.match(new RegExp('[0-9]{4}/') ) ) {\n      format = format.replace(new RegExp('[0-9]{4}/'), '');\n    }\n    return format;\n  }\n\n  getWeekdayFromDate(d: Date): string {\n    let format = d.toLocaleDateString(undefined,{timeZone: 'UTC', weekday: \"short\"});\n    format = format.replace('.','');\n    return format;\n  }\n  \n  get asignments(): Observable<Asignment[]> {\n    return this.spendingsService.getSpendings();\n  }\n  \n  editAsignment(data: Asignment) {\n    this.errorMessage = \"\";\n  }\n  \n  handleError(res: HttpErrorResponse) {\n      this.errorMessage = res.error.error_message;\n      console.log(res);\n  }\n\n  saveSpendings() {\n    this.spendingsService.saveSpendings(this.rowData).subscribe(\n      data => this.refeshAsignments(),\n      error => this.handleError(error)\n    );\n  }\n\n  resetControls() {\n    this.myForm.resetForm();\n    Object.keys(this.myForm.controls).forEach(field => {      \n      const control = this.myForm.control.get(field);         \n      control.markAsUntouched();\n    });\n  }\n\n  cancelEditMode() {\n    this.initialMode();\n  }  \n\n  private initialMode() {\n    this.errorMessage = \"\";\n    this.isEditMode = false;\n    this.resetControls();\n  }\n\n  onGridReady(params: any) {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    this.gridColumnApi.autoSizeColumns();\n  }\n\n  onCellEditingStarted(params: any) {\n//    console.log(\"cellEditingStarted\");\n//    console.log(params);\n//    console.log(params.value);\n//    console.log(params.column);\n//    console.log(params.data.capacity);\n//    console.log(params.node);\n//    params.node.setDataValue(params.column.colId, params.data.capacity);\n  } \n\n  compareFeatures(o1:Feature,o2:Feature) : boolean {\n    return (o1 && o2) ? o1.id === o2.id : o1 === o2; \n  }\n\n  compareUsers(o1:User,o2:User) : boolean {\n    return (o1 && o2) ? o1.username === o2.username : o1 === o2;       \n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { AgGridModule } from 'ag-grid-angular';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { environment } from '../../environments/environment';\nimport { SpendingComponent } from './spending.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    AgGridModule.withComponents([])\n  ],\n  declarations: [SpendingComponent]\n})\nexport class SpendingModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { LoginService } from '../login/login.service';\nimport { Asignment } from '../asignment/asignment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpendingService {\n  private _baseUrl = './api/springs/';\n\n  constructor(private http: HttpClient, private loginService: LoginService) {\n  }\n\n  getSpendings() : Observable<Asignment[]>{\n    return this.http.get(this.baseUrl) as Observable<Asignment[]>;\n  }\n\n  saveSpendings(asignments : Asignment[]): Observable<Asignment> {\n    return this.http.put(`${this.baseUrl}/spendings`, asignments) as Observable<Asignment>;\n  }\n\n  private get baseUrl(): string {\n    return this._baseUrl + this.loginService.currentSpringId + '/asignments';\n  }\n\n}\n","import { DateModel } from \"../shared/date.model\";\r\n\r\nexport class Spring {\r\n    \r\n    id : number;\r\n    code : string = '';\r\n    name : string = '';\r\n//    status : string = '';\r\n    springDays : number;\r\n    startDate : string;\r\n    endDate: string;\r\n\r\n    startDateMd : DateModel;\r\n    endDateMd : DateModel;\r\n\r\n    constructor(values: Object = {}) {\r\n        Object.assign(this, values);\r\n        this.startDateMd = new DateModel(this.startDate);\r\n        this.endDateMd = new DateModel(this.endDate);\r\n    }\r\n\r\n    applyChanges() {\r\n        this.startDate = this.startDateMd.value;\r\n        this.endDate = this.endDateMd.value;\r\n    }\r\n\r\n    setEndDateMdCalculed() {\r\n        this.endDateMd.setAddWorkableDays(this.startDateMd,this.springDays);\r\n    }\r\n\r\n    isNeededPropagate() : boolean {\r\n        return !this.endDateMd.equalsThan(this.endDate);\r\n    }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NwcmluZ3Mvc3ByaW5ncy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { GridApi, GridOptions } from 'ag-grid';\nimport { MatEditButtonGridRenderComponent } from '../grid-custom-components/mat-edit-button-grid-render/mat-edit-button-grid-render.component';\nimport { MatRemoveButtonGridRenderComponent } from '../grid-custom-components/mat-remove-button-grid-render/mat-remove-button-grid-render.component';\nimport { SpringsService } from \"./springs.service\";\nimport { Spring } from './spirng';\nimport { DateModel } from '../shared/date.model';\nimport { LoginService } from '../login/login.service';\nimport { Observable } from 'rxjs';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { AgFormatterService } from '../shared/ag-formatter.service';\n\n@Component({\n  selector: 'app-springs',\n  templateUrl: './springs.component.html',\n  styleUrls: ['./springs.component.scss']\n})\nexport class SpringsComponent implements OnInit {\n\n  public spring : Spring;\n  public startDateModel : DateModel;\n  public context;\n\n  @ViewChild('myForm', { static: false }) myForm : NgForm;\n  \n  private gridApi: GridApi;\n  private gridColumnApi;\n  private columnDefs;\n  private rowData : Spring[];\n  private gridOptions: GridOptions;\n  private errorMessage : string = \"\";\n  private isEditMode: boolean = false;\n\n  constructor(private springsService: SpringsService, private loginService: LoginService, private frm: AgFormatterService) {\n\n    this.context = { componentParent: this };\n\n    this.gridOptions = <GridOptions>{};\n    this.gridOptions.enableFilter = true;\n    this.gridOptions.enableSorting = true;\n    this.gridOptions.suppressRowClickSelection = false;\n    this.gridOptions.enableColResize = true;\n    this.gridOptions.enableCellChangeFlash = true;\n    this.gridOptions.rowSelection = 'single';\n\n    this.spring = this.springsService.setSpringDefaultValues();\n\n    this.columnDefs = [\n      { headerName: 'Key', field: 'key', hide: true },\n      { headerName: 'Spring Code', field: 'code', filter: 'text', width: 150 },\n      { headerName: 'Spring Name', field: 'name', filter: 'text', width: 150 },\n      { headerName: 'Status', field: 'status', filter: 'text', width: 150 },\n      { headerName: 'Spring Days', field: 'springDays', type: \"numericColumn\", filter: 'number', width: 150 },\n      { headerName: 'Start Date', field: 'startDate', filter: 'text', width: 150, valueFormatter: this.frm.ag_dateFormatter },\n      { headerName: 'End Date', field: 'endDate', filter: 'text', width: 150, valueFormatter: this.frm.ag_dateFormatter },\n      { headerName: '', cellRendererFramework: MatEditButtonGridRenderComponent, width: 75 },\n      { headerName: '', suppressFilter: true, cellRendererFramework: MatRemoveButtonGridRenderComponent, width: 75 }\n    ];\n  }\n\n  ngOnInit(): void {\n    this.populateSprings();\n  }\n\n  refeshSprings(): void {\n    this.populateSprings();\n    this.initialMode();\n  }\n\n  private populateSprings() {\n    this.springs.subscribe(\n      springList => {\n        this.rowData = springList?springList.map(s=>new Spring(s)):springList;\n        this.spring = this.springsService.changeSpringDefaultValues(this.spring, this.rowData);\n      }, \n      error => this.handleError(error)\n    );\n  }\n\n  currencyFormatter(params) {\n    return '£' + params.value;\n  }\n\n  get springs(): Observable<Spring[]>{\n    return this.springsService.getSprings();\n  }\n  \n  getSpringById(id: number) : Observable<Spring> {\n    return this.springsService.getSpringById(id);\n  }\n\n  removeSpring(id: number) {\n    this.springsService.deleteSpringById(id).subscribe(\n      data => this.refeshSprings(),\n      error => console.log(error)\n    );\n  }\n\n  editSpring(data: Spring) {\n    this.spring = new Spring(data);\n    this.errorMessage = \"\";\n  }\n  \n  addSpring() {\n    this.spring.applyChanges();\n    this.springsService.addSpring(this.spring).subscribe(\n      data => this.refeshSprings(),\n      error => this.handleError(error)\n    );\n  }\n\n  updateSpring(){\n    if (this.spring.isNeededPropagate()) {\n      this.propagateSprings(this.spring);\n    }\n    this.spring.applyChanges();\n    this.springsService.updateSpring(this.spring).subscribe(\n      data => this.refeshSprings(),\n      error => this.handleError(error)\n    );\n  }\n\n  propagateSprings(spring: Spring) {\n    let dateToPropagate = new DateModel(this.loginService.currentProject.startDate.toString());\n    dateToPropagate.setAddWorkableDays(dateToPropagate,0);\n    this.rowData.forEach(sprg => {\n        if (sprg.code == spring.code) {\n            sprg = spring;\n        }\n        let spr = this.propagateAndupdateSpring(sprg,dateToPropagate);\n        dateToPropagate = spr.endDateMd;\n    })\n\n  }\n\n  propagateAndupdateSpring(sprg: Spring,endDateMd: DateModel ): Spring {\n    sprg.startDateMd.setAddWorkableDays(endDateMd,2);\n    sprg.setEndDateMdCalculed();\n    sprg.applyChanges();\n    this.springsService.updateSpring(sprg).subscribe();\n    return sprg;\n  }\n\n  resetControls() {\n    this.myForm.resetForm();\n    Object.keys(this.myForm.controls).forEach(field => {      // {1}\n      const control = this.myForm.control.get(field);         // {2}\n      control.markAsUntouched();                              // {3}\n    });\n  }\n\n  // Call from MatRemoveButtonGridRenderComponent\n  removeFromComponent(spring: Spring){\n    this.removeSpring(spring.id);\n    this.initialMode();\n  }\n\n  // Call from MatEditButtonGridRenderComponent\n  editFromComponent(data: Spring){\n    this.isEditMode = true;\n    this.editSpring(data);\n  }\n\n  cancelEditMode() {\n    this.initialMode();\n  }  \n\n  private initialMode() {\n    this.spring = new Spring();\n    this.errorMessage = \"\";\n    this.isEditMode = false;\n    this.resetControls();\n  }\n\n  onSelectionChanged() {\n    var selectedRows = this.gridApi.getSelectedRows();\n    var selectedRowAux;\n    selectedRows.forEach(function(row, index) {\n        selectedRowAux = row;\n    });\n    this.loginService.currentSpring = selectedRowAux;\n  }  \n\n  onGridReady(params) {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    this.gridColumnApi.autoSizeColumns();\n  }\n\n  handleError(res: HttpErrorResponse) {\n    this.errorMessage = res.error.error_message; \n    console.log(res);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { AgGridModule } from 'ag-grid-angular';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { environment } from '../../environments/environment';\nimport { SpringsComponent } from './springs.component';\nimport { NoWeekendValidator } from '../shared/date.weekend.directive';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    AgGridModule.withComponents([])\n  ],\n  exports: [\n    SpringsComponent\n  ],\n  declarations: [SpringsComponent]\n})\nexport class SpringsModule { }\n","import { Injectable } from '@angular/core';\r\nimport { LoginService } from '../login/login.service';\r\nimport { Spring } from './spirng';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SpringsService {\r\n  private currentProjectId = \"\";\r\n  private _baseUrl = './api/projects/';\r\n  \r\n  constructor(private http: HttpClient, private loginService: LoginService) {\r\n  }\r\n  \r\n  public getSprings(): Observable<Spring[]> {\r\n    return this.http.get(this.baseUrl) as Observable<Spring[]>;\r\n    ;\r\n  }\r\n  \r\n  public getSpringById(id: number): Observable<Spring> {\r\n    return this.http.get(`${this.baseUrl}/${id}`) as Observable<Spring>;\r\n  }\r\n  \r\n  public addSpring(spring: Spring): Observable<Spring> {\r\n    return this.http.post(this.baseUrl, spring) as Observable<Spring>;\r\n    ;\r\n  }\r\n  \r\n  public deleteSpringById(id: number): Observable<Spring> {\r\n    return this.http.delete(`${this.baseUrl}/${id}`) as Observable<Spring>;\r\n  }\r\n  \r\n  public updateSpring(spring: Spring): Observable<Spring> {\r\n    return this.http.put(`${this.baseUrl}/${spring.id}`, spring) as Observable<Spring>;\r\n  }\r\n  \r\n  public setSpringDefaultValues(spring: Spring = new Spring()): Spring {\r\n    spring.springDays = this.loginService.currentProject.springDays;\r\n    spring.startDateMd.value = this.loginService.currentProject.startDate.toString();\r\n    spring.setEndDateMdCalculed();\r\n    return spring;\r\n  }\r\n  \r\n  public changeSpringDefaultValues(spring: Spring, rowData: Spring[]): Spring {\r\n    spring = this.setSpringDefaultValues(spring);\r\n    if (rowData) {\r\n      rowData.forEach(s => {\r\n        if (spring.startDateMd.lessThan(s.endDateMd)) {\r\n          spring.startDateMd.setAddWorkableDays(s.endDateMd, 2);\r\n          spring.setEndDateMdCalculed();\r\n        }\r\n      });\r\n    }\r\n    return spring;\r\n  }\r\n  \r\n  private get baseUrl(): string {\r\n    return this._baseUrl + this.loginService.currentProjectId + '/springs';\r\n  }\r\n}\r\n","export class User {\r\n    \r\n    username : string;\r\n    password : string = '';\r\n    name : string;\r\n    email : string = '';\r\n    phone : string = '';\r\n    mobile: string = '';\r\n\r\n    constructor(values: Object = {}) {\r\n        Object.assign(this, values);\r\n    }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL3VzZXJzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\nimport { GridApi, GridOptions, RowNode } from 'ag-grid';\nimport { User } from './user';\nimport { UserService } from './users.service';\nimport { MatRemoveButtonGridRenderComponent } from '../grid-custom-components/mat-remove-button-grid-render/mat-remove-button-grid-render.component';\nimport { MatEditButtonGridRenderComponent } from '../grid-custom-components/mat-edit-button-grid-render/mat-edit-button-grid-render.component';\nimport { NgForm, FormGroup } from '@angular/forms';\nimport { LoginService } from '../login/login.service';\nimport { Observable } from 'rxjs';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss']\n})\nexport class UsersComponent implements OnInit {\n  public user = new User();\n  public context;\n\n  @ViewChild('myForm',{static: false}) myForm : NgForm;\n  \n  private gridApi: GridApi;\n  private gridColumnApi;\n  private columnDefs: any;\n  private rowData: User[];\n  private gridOptions: GridOptions;\n  private errorMessage : string = \"\";\n  private isEditMode: boolean = false;\n\n  constructor(private userService: UserService, private loginService: LoginService) {\n\n    this.context = { componentParent: this };\n\n    this.gridOptions = <GridOptions>{};\n    this.gridOptions.enableFilter = true;\n    this.gridOptions.enableSorting = true;\n    this.gridOptions.rowSelection = 'simple';\n    this.gridOptions.suppressRowClickSelection = false;\n    this.gridOptions.enableColResize = true;\n\n    this.columnDefs = [\n      { headerName: 'User', field: 'username', filter: 'text' },\n      { headerName: 'Name', field: 'name', filter: 'text' },\n      { headerName: 'Email', field: 'email', filter: 'text' },\n      { headerName: 'Phone', field: 'phone', filter: 'text' },\n      { headerName: 'Mobile', field: 'mobile', filter: 'text' },\n      { headerName: '', cellRendererFramework: MatEditButtonGridRenderComponent, width: 40 },\n      { headerName: '', suppressFilter: true, cellRendererFramework: MatRemoveButtonGridRenderComponent, width: 40 }\n    ];\n  }\n\n  ngOnInit(): void {\n    this.populateUsers();\n  }\n\n  refeshUsers(): void {\n    this.populateUsers();\n    this.initialMode();\n    this.resetControls();\n  }\n\n  private populateUsers() {\n    this.userService.getUsers().subscribe(\n      userList => this.rowData = userList, \n      error => this.handleError(error)\n    );\n  }\n\n  dateFormatter(params: any) {\n    return new Date(params.value).toLocaleDateString(\"es-ES\",{timeZone: 'UTC', year:\"numeric\",month:\"2-digit\", day:\"2-digit\"});\n  }\n\n  get users(): Observable<User[]> {\n    return this.userService.getUsers();\n  }\n  \n  getUserByUsername(username: string): Observable<User> {\n    return this.userService.getUserByUsername(username);\n  }\n\n  removeUser(username: string) {\n    this.userService.deleteUserByUsername(username).subscribe(\n      data => this.refeshUsers(),\n      error => console.log(error)\n    );\n  }\n\n  editUser(data: User) {\n    this.user = new User(data);\n    this.errorMessage = \"\";\n  }\n  \n  addUser(): void {\n  //  this.project.status = \"OPEN\";\n    this.userService.addUser(this.user).subscribe(\n      data => this.refeshUsers(),\n      error => this.handleError(error)\n    );\n  }\n\n  handleError(res: HttpErrorResponse) {\n      this.errorMessage = res.error.error_message; \n      console.log(res);\n  }\n\n  updateUser(){\n    this.userService.updateUser(this.user).subscribe(\n      data => this.refeshUsers(),\n      error => this.handleError(error)\n    );\n  }\n\n  resetControls() {\n    this.myForm.resetForm();\n    Object.keys(this.myForm.controls).forEach(field => {      \n      const control = this.myForm.control.get(field);         \n      control.markAsUntouched();\n    });\n  }\n\n  // Call from MatRemoveButtonGridRenderComponent\n  removeFromComponent(user: User){\n    this.removeUser(user.username);\n    this.initialMode();\n  }\n\n  // Call from MatEditButtonGridRenderComponent\n  editFromComponent(data: User){\n    this.isEditMode = true;\n    this.editUser(data);\n  }\n\n  cancelEditMode() {\n    this.initialMode();\n  }  \n\n  private initialMode() {\n    this.user = new User();\n    this.errorMessage = \"\";\n    this.isEditMode = false;\n    this.resetControls();\n  }\n\n  onGridReady(params: any) {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    this.gridColumnApi.autoSizeColumns();\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\nimport { UsersComponent } from './users.component';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    AgGridModule.withComponents([])\r\n  ],\r\n  declarations: [UsersComponent]\r\n})\r\nexport class UsersModule { }\r\n","import { Injectable, OnDestroy, OnInit } from '@angular/core';\nimport { User } from './user';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private baseUrl = './api/users';\n\n  constructor(public http: HttpClient) {\n  }\n\n  getUsers() : Observable<User[]>{\n    return this.http.get(this.baseUrl) as Observable<User[]>;\n  }\n\n  getUserByUsername(username : string): Observable<User> {\n    return this.http.get(`${this.baseUrl}/${username}`) as Observable<User>;\n  }\n\n  addUser(user: User): Observable<User>  {\n      return this.http.post(this.baseUrl, user)  as Observable<User>;\n  }\n\n  deleteUserByUsername(username: string) : Observable<User> {\n    return this.http.delete(`${this.baseUrl}/${username}`)  as Observable<User>;\n  }\n\n  updateUser(user : User): Observable<User> {\n    return this.http.put(`${this.baseUrl}/${user.username}`, user) as Observable<User>;\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  myEndpoint: \"localhost:8080\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}